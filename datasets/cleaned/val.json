[
  {
    "id": 7908,
    "input_text": "Create a positive test case for profile settings. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7908 Feature: Profile Settings Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3626,
    "input_text": "Automated test case for bill payment. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3626 Feature: Bill Payment Priority: Medium Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4674,
    "input_text": "Test specification for card management - edge scenario",
    "target_text": "Test Case: Verify Card Management Boundary Conditions Test ID: TC-CARD-4674 Feature: Card Management Priority: Critical Scenario: Edge Preconditions: • Multiple cards with different limits Test Steps: Given user accesses card management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Card limit enforcement verified",
    "feature": "card_management",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5428,
    "input_text": "Write test case to verify account overview functionality",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5428 Feature: Account Overview Priority: Medium Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9199,
    "input_text": "User acceptance test for security settings",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-9199 Feature: Security Settings Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8455,
    "input_text": "User acceptance test for security settings",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8455 Feature: Security Settings Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1116,
    "input_text": "Generate negative test scenario for login authentication with low priority. Priority: Low",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-1116 Feature: Login Authentication Priority: Low Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear And user should remain on login screen Expected Result: • Login rejected with clear error message",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6180,
    "input_text": "Write test case to verify transaction alerts functionality",
    "target_text": "Test Case: Verify Transaction Alerts Boundary Conditions Test ID: TC-ALRT-6180 Feature: Transaction Alerts Priority: Low Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 263,
    "input_text": "Write test case to verify login authentication functionality",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0263 Feature: Login Authentication Priority: Critical Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear Expected Result: • Login rejected with clear error message",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5848,
    "input_text": "QA test case for mobile banking transaction alerts",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-5848 Feature: Transaction Alerts Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3331,
    "input_text": "QA test case for mobile banking bill payment. Priority: Medium",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3331 Feature: Bill Payment Priority: Medium Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed Expected Result: • Payment processed with receipt number generated",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3738,
    "input_text": "QA test case for mobile banking card management. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-3738 Feature: Card Management Priority: Low Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9785,
    "input_text": "User acceptance test for mobile deposits",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9785 Feature: Mobile Deposits Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8718,
    "input_text": "Test specification for security settings - edge scenario",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-8718 Feature: Security Settings Priority: High Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1489,
    "input_text": "User acceptance test for fund transfer. Regression testing",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1489 Feature: Fund Transfer Priority: Critical Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5147,
    "input_text": "Automated test case for account overview",
    "target_text": "Test Case: Verify Account Overview Security Controls Test ID: TC-ACCT-5147 Feature: Account Overview Priority: Low Scenario: Security Preconditions: • Account access is properly configured Test Steps: Given user accesses account overview feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Audit log created for access Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "account_overview",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7249,
    "input_text": "Generate negative test scenario for beneficiary management with critical priority. Regression testing",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-7249 Feature: Beneficiary Management Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7498,
    "input_text": "Create a negative test case for profile settings",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-7498 Feature: Profile Settings Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5472,
    "input_text": "BDD scenario for account overview feature. Mobile banking feature",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5472 Feature: Account Overview Priority: Medium Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5024,
    "input_text": "Automated test case for account overview",
    "target_text": "Test Case: Verify Account Overview Boundary Conditions Test ID: TC-ACCT-5024 Feature: Account Overview Priority: Medium Scenario: Edge Preconditions: • User has maximum allowed accounts Test Steps: Given user accesses account overview feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Performance acceptable with max accounts",
    "feature": "account_overview",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4604,
    "input_text": "Create a positive test case for card management. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-4604 Feature: Card Management Priority: Medium Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3543,
    "input_text": "Test specification for bill payment - security scenario",
    "target_text": "Test Case: Verify Bill Payment Security Controls Test ID: TC-BILL-3543 Feature: Bill Payment Priority: High Scenario: Security Preconditions: • Payment gateway security is configured Test Steps: Given user accesses bill payment feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Payment requires additional authentication",
    "feature": "bill_payment",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2823,
    "input_text": "Automated test case for bill payment. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-2823 Feature: Bill Payment Priority: Critical Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3598,
    "input_text": "User acceptance test for bill payment",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3598 Feature: Bill Payment Priority: Medium Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7445,
    "input_text": "Generate edge test scenario for profile settings with low priority",
    "target_text": "Test Case: Verify Profile Settings Boundary Conditions Test ID: TC-PROF-7445 Feature: Profile Settings Priority: Low Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8339,
    "input_text": "Generate positive test scenario for security settings with low priority",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8339 Feature: Security Settings Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7568,
    "input_text": "Automated test case for profile settings",
    "target_text": "Test Case: Verify Profile Settings Security Controls Test ID: TC-PROF-7568 Feature: Profile Settings Priority: High Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5953,
    "input_text": "QA test case for mobile banking transaction alerts",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-5953 Feature: Transaction Alerts Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 916,
    "input_text": "BDD scenario for login authentication feature. Scenario type: negative",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0916 Feature: Login Authentication Priority: Critical Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear Expected Result: • Login rejected with clear error message Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4004,
    "input_text": "QA test case for mobile banking card management",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4004 Feature: Card Management Priority: High Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5845,
    "input_text": "User acceptance test for transaction alerts. Priority: Medium",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-5845 Feature: Transaction Alerts Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 725,
    "input_text": "Generate positive test scenario for login authentication with low priority. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0725 Feature: Login Authentication Priority: Low Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard And user profile should be displayed Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6929,
    "input_text": "QA test case for mobile banking beneficiary management. Priority: Low",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-6929 Feature: Beneficiary Management Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9898,
    "input_text": "BDD scenario for mobile deposits feature. Scenario type: negative",
    "target_text": "Test Case: Verify Mobile Deposits Fails with Invalid Input Test ID: TC-DEP-9898 Feature: Mobile Deposits Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8352,
    "input_text": "Automated test case for security settings. Priority: High",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8352 Feature: Security Settings Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1533,
    "input_text": "User acceptance test for fund transfer. Regression testing",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1533 Feature: Fund Transfer Priority: Medium Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8825,
    "input_text": "BDD scenario for security settings feature",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8825 Feature: Security Settings Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3008,
    "input_text": "Create a negative test case for bill payment",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3008 Feature: Bill Payment Priority: Critical Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8563,
    "input_text": "Create a edge test case for security settings. Mobile banking feature",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-8563 Feature: Security Settings Priority: Medium Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8453,
    "input_text": "BDD scenario for security settings feature. Regression testing",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8453 Feature: Security Settings Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1625,
    "input_text": "Write test case to verify fund transfer functionality",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1625 Feature: Fund Transfer Priority: Low Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4740,
    "input_text": "Generate positive test scenario for account overview with critical priority. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-4740 Feature: Account Overview Priority: Critical Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9794,
    "input_text": "Create a negative test case for mobile deposits",
    "target_text": "Test Case: Verify Mobile Deposits Fails with Invalid Input Test ID: TC-DEP-9794 Feature: Mobile Deposits Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "mobile_deposits",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2882,
    "input_text": "QA test case for mobile banking bill payment. Mobile banking feature",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-2882 Feature: Bill Payment Priority: High Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7276,
    "input_text": "Write test case to verify beneficiary management functionality",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-7276 Feature: Beneficiary Management Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1689,
    "input_text": "Write test case to verify fund transfer functionality",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1689 Feature: Fund Transfer Priority: Medium Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9044,
    "input_text": "Write test case to verify security settings functionality. Mobile banking feature",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-9044 Feature: Security Settings Priority: Medium Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 890,
    "input_text": "QA test case for mobile banking login authentication",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0890 Feature: Login Authentication Priority: Low Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Expected Result: • Login rejected with clear error message",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7532,
    "input_text": "Automated test case for profile settings. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7532 Feature: Profile Settings Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2997,
    "input_text": "Create a negative test case for bill payment. Scenario type: negative",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-2997 Feature: Bill Payment Priority: Critical Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4518,
    "input_text": "Automated test case for card management",
    "target_text": "Test Case: Verify Card Management Security Controls Test ID: TC-CARD-4518 Feature: Card Management Priority: Critical Scenario: Security Preconditions: • Card security settings are enabled Test Steps: Given user accesses card management feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Security alert triggered",
    "feature": "card_management",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2459,
    "input_text": "Write test case to verify fund transfer functionality",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-2459 Feature: Fund Transfer Priority: High Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Then transfer should be processed successfully Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9531,
    "input_text": "Write test case to verify mobile deposits functionality",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9531 Feature: Mobile Deposits Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2635,
    "input_text": "Write test case to verify fund transfer functionality. Scenario type: negative",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-2635 Feature: Fund Transfer Priority: Low Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6968,
    "input_text": "QA test case for mobile banking beneficiary management",
    "target_text": "Test Case: Verify Beneficiary Management Security Controls Test ID: TC-BNFY-6968 Feature: Beneficiary Management Priority: Low Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "beneficiary_management",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2586,
    "input_text": "Generate negative test scenario for fund transfer with critical priority. Mobile banking feature",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-2586 Feature: Fund Transfer Priority: Critical Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1269,
    "input_text": "BDD scenario for fund transfer feature",
    "target_text": "Test Case: Verify Fund Transfer Security Controls Test ID: TC-FUND-1269 Feature: Fund Transfer Priority: High Scenario: Security Preconditions: • Transaction monitoring is enabled Test Steps: Given user accesses fund transfer feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Transaction flagged for security review Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "fund_transfer",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7956,
    "input_text": "Test specification for profile settings - edge scenario",
    "target_text": "Test Case: Verify Profile Settings Boundary Conditions Test ID: TC-PROF-7956 Feature: Profile Settings Priority: Medium Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4300,
    "input_text": "Automated test case for card management. Regression testing",
    "target_text": "Test Case: Verify Card Management Boundary Conditions Test ID: TC-CARD-4300 Feature: Card Management Priority: Critical Scenario: Edge Preconditions: • Multiple cards with different limits Test Steps: Given user accesses card management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Card limit enforcement verified",
    "feature": "card_management",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2211,
    "input_text": "QA test case for mobile banking fund transfer. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-2211 Feature: Fund Transfer Priority: Critical Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 Expected Result: • Transfer completed with confirmation And updated balance Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9594,
    "input_text": "User acceptance test for mobile deposits",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9594 Feature: Mobile Deposits Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1330,
    "input_text": "BDD scenario for fund transfer feature. Priority: High",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1330 Feature: Fund Transfer Priority: High Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Then transfer should be processed successfully Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3897,
    "input_text": "QA test case for mobile banking card management",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-3897 Feature: Card Management Priority: Medium Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4894,
    "input_text": "User acceptance test for account overview",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-4894 Feature: Account Overview Priority: Low Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2325,
    "input_text": "Generate negative test scenario for fund transfer with medium priority",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-2325 Feature: Fund Transfer Priority: Medium Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked And balance should remain unchanged Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3544,
    "input_text": "Create a positive test case for bill payment",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3544 Feature: Bill Payment Priority: Medium Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed And receipt should be generated Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3464,
    "input_text": "BDD scenario for bill payment feature",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3464 Feature: Bill Payment Priority: Low Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5877,
    "input_text": "Automated test case for transaction alerts",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-5877 Feature: Transaction Alerts Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6996,
    "input_text": "Generate negative test scenario for beneficiary management with high priority",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-6996 Feature: Beneficiary Management Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4459,
    "input_text": "Write test case to verify card management functionality. Priority: Critical",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4459 Feature: Card Management Priority: Critical Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5088,
    "input_text": "Write test case to verify account overview functionality",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5088 Feature: Account Overview Priority: High Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4386,
    "input_text": "User acceptance test for card management. Priority: Medium",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4386 Feature: Card Management Priority: Medium Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1310,
    "input_text": "Automated test case for fund transfer. Priority: Low",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1310 Feature: Fund Transfer Priority: Low Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6469,
    "input_text": "User acceptance test for transaction alerts",
    "target_text": "Test Case: Verify Transaction Alerts Boundary Conditions Test ID: TC-ALRT-6469 Feature: Transaction Alerts Priority: Medium Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5096,
    "input_text": "Automated test case for account overview",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5096 Feature: Account Overview Priority: Critical Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1148,
    "input_text": "User acceptance test for login authentication. Regression testing",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-1148 Feature: Login Authentication Priority: High Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Expected Result: • Login successful with dashboard displayed within 2 seconds Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3951,
    "input_text": "QA test case for mobile banking card management",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-3951 Feature: Card Management Priority: Critical Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1404,
    "input_text": "Automated test case for fund transfer",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1404 Feature: Fund Transfer Priority: Low Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked And balance should remain unchanged Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4118,
    "input_text": "User acceptance test for card management",
    "target_text": "Test Case: Verify Card Management Boundary Conditions Test ID: TC-CARD-4118 Feature: Card Management Priority: Medium Scenario: Edge Preconditions: • Multiple cards with different limits Test Steps: Given user accesses card management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Card limit enforcement verified",
    "feature": "card_management",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1101,
    "input_text": "Write test case to verify login authentication functionality. Regression testing",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-1101 Feature: Login Authentication Priority: Critical Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear Expected Result: • Login rejected with clear error message",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 845,
    "input_text": "User acceptance test for login authentication",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0845 Feature: Login Authentication Priority: High Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2844,
    "input_text": "Test specification for bill payment - positive scenario. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-2844 Feature: Bill Payment Priority: High Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed And receipt should be generated Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2412,
    "input_text": "Generate positive test scenario for fund transfer with medium priority",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-2412 Feature: Fund Transfer Priority: Medium Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Then transfer should be processed successfully Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5689,
    "input_text": "Test specification for account overview - positive scenario",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5689 Feature: Account Overview Priority: High Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8578,
    "input_text": "QA test case for mobile banking security settings",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8578 Feature: Security Settings Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2757,
    "input_text": "QA test case for mobile banking bill payment",
    "target_text": "Test Case: Verify Bill Payment Boundary Conditions Test ID: TC-BILL-2757 Feature: Bill Payment Priority: Low Scenario: Edge Preconditions: • Bill amount equals account balance Test Steps: Given user accesses bill payment feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Payment handles maximum amount",
    "feature": "bill_payment",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6363,
    "input_text": "Generate negative test scenario for transaction alerts with high priority",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-6363 Feature: Transaction Alerts Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 273,
    "input_text": "QA test case for mobile banking login authentication",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0273 Feature: Login Authentication Priority: Medium Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear And user should remain on login screen Expected Result: • Login rejected with clear error message",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2359,
    "input_text": "Generate positive test scenario for fund transfer with critical priority. Regression testing",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-2359 Feature: Fund Transfer Priority: Critical Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3481,
    "input_text": "Test specification for bill payment - negative scenario",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3481 Feature: Bill Payment Priority: Medium Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5250,
    "input_text": "Automated test case for account overview",
    "target_text": "Test Case: Verify Account Overview Boundary Conditions Test ID: TC-ACCT-5250 Feature: Account Overview Priority: Medium Scenario: Edge Preconditions: • User has maximum allowed accounts Test Steps: Given user accesses account overview feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Performance acceptable with max accounts",
    "feature": "account_overview",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 465,
    "input_text": "Write test case to verify login authentication functionality",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0465 Feature: Login Authentication Priority: Low Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2385,
    "input_text": "BDD scenario for fund transfer feature",
    "target_text": "Test Case: Verify Fund Transfer Boundary Conditions Test ID: TC-FUND-2385 Feature: Fund Transfer Priority: Critical Scenario: Edge Preconditions: • User has exactly minimum balance required Test Steps: Given user accesses fund transfer feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Transfer processes at exact limit",
    "feature": "fund_transfer",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3449,
    "input_text": "Automated test case for bill payment",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3449 Feature: Bill Payment Priority: Critical Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5792,
    "input_text": "Generate positive test scenario for transaction alerts with medium priority",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-5792 Feature: Transaction Alerts Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6827,
    "input_text": "Create a edge test case for beneficiary management. Regression testing",
    "target_text": "Test Case: Verify Beneficiary Management Boundary Conditions Test ID: TC-BNFY-6827 Feature: Beneficiary Management Priority: Medium Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5590,
    "input_text": "Automated test case for account overview",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5590 Feature: Account Overview Priority: Critical Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6409,
    "input_text": "User acceptance test for transaction alerts",
    "target_text": "Test Case: Verify Transaction Alerts Boundary Conditions Test ID: TC-ALRT-6409 Feature: Transaction Alerts Priority: High Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "edge",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3119,
    "input_text": "QA test case for mobile banking bill payment",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3119 Feature: Bill Payment Priority: Critical Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3821,
    "input_text": "Generate edge test scenario for card management with low priority",
    "target_text": "Test Case: Verify Card Management Boundary Conditions Test ID: TC-CARD-3821 Feature: Card Management Priority: Low Scenario: Edge Preconditions: • Multiple cards with different limits Test Steps: Given user accesses card management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Card limit enforcement verified",
    "feature": "card_management",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 508,
    "input_text": "Automated test case for login authentication",
    "target_text": "Test Case: Verify Login Authentication Boundary Conditions Test ID: TC-AUTH-0508 Feature: Login Authentication Priority: Medium Scenario: Edge Preconditions: • Multiple login sessions are configured Test Steps: Given user accesses login authentication feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • System handles concurrent login attempts",
    "feature": "login_authentication",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7013,
    "input_text": "BDD scenario for beneficiary management feature",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-7013 Feature: Beneficiary Management Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9959,
    "input_text": "Test specification for mobile deposits - security scenario",
    "target_text": "Test Case: Verify Mobile Deposits Security Controls Test ID: TC-DEP-9959 Feature: Mobile Deposits Priority: Medium Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7950,
    "input_text": "Generate negative test scenario for profile settings with low priority. Mobile banking feature",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-7950 Feature: Profile Settings Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 479,
    "input_text": "Generate security test scenario for login authentication with low priority",
    "target_text": "Test Case: Verify Login Authentication Security Controls Test ID: TC-AUTH-0479 Feature: Login Authentication Priority: Low Scenario: Security Preconditions: • Security monitoring is active And login attempts are tracked Test Steps: Given user accesses login authentication feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Account locked after failed attempts",
    "feature": "login_authentication",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 92,
    "input_text": "Write test case to verify login authentication functionality",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0092 Feature: Login Authentication Priority: Low Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard And user profile should be displayed Expected Result: • Login successful with dashboard displayed within 2 seconds Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7807,
    "input_text": "User acceptance test for profile settings. Regression testing",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7807 Feature: Profile Settings Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3221,
    "input_text": "Generate positive test scenario for bill payment with low priority",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3221 Feature: Bill Payment Priority: Low Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2946,
    "input_text": "Automated test case for bill payment",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-2946 Feature: Bill Payment Priority: Medium Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7071,
    "input_text": "Generate negative test scenario for beneficiary management with high priority",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-7071 Feature: Beneficiary Management Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4778,
    "input_text": "Test specification for account overview - positive scenario. Priority: High",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-4778 Feature: Account Overview Priority: High Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8441,
    "input_text": "BDD scenario for security settings feature",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8441 Feature: Security Settings Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 326,
    "input_text": "Automated test case for login authentication",
    "target_text": "Test Case: Verify Login Authentication Boundary Conditions Test ID: TC-AUTH-0326 Feature: Login Authentication Priority: High Scenario: Edge Preconditions: • Multiple login sessions are configured Test Steps: Given user accesses login authentication feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • System handles concurrent login attempts",
    "feature": "login_authentication",
    "scenario_type": "edge",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3877,
    "input_text": "Write test case to verify card management functionality",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-3877 Feature: Card Management Priority: Low Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3089,
    "input_text": "User acceptance test for bill payment",
    "target_text": "Test Case: Verify Bill Payment Security Controls Test ID: TC-BILL-3089 Feature: Bill Payment Priority: Critical Scenario: Security Preconditions: • Payment gateway security is configured Test Steps: Given user accesses bill payment feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Payment requires additional authentication",
    "feature": "bill_payment",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 900,
    "input_text": "Automated test case for login authentication",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0900 Feature: Login Authentication Priority: Low Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear And user should remain on login screen Expected Result: • Login rejected with clear error message Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4315,
    "input_text": "User acceptance test for card management",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-4315 Feature: Card Management Priority: Critical Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5612,
    "input_text": "BDD scenario for account overview feature",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5612 Feature: Account Overview Priority: Low Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 776,
    "input_text": "Test specification for login authentication - positive scenario",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0776 Feature: Login Authentication Priority: Low Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard And user profile should be displayed Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1239,
    "input_text": "Create a positive test case for fund transfer",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1239 Feature: Fund Transfer Priority: Low Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 Expected Result: • Transfer completed with confirmation And updated balance Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7538,
    "input_text": "QA test case for mobile banking profile settings. Regression testing",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7538 Feature: Profile Settings Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6668,
    "input_text": "Automated test case for beneficiary management",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-6668 Feature: Beneficiary Management Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1790,
    "input_text": "BDD scenario for fund transfer feature. Mobile banking feature",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1790 Feature: Fund Transfer Priority: Low Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked And balance should remain unchanged Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9792,
    "input_text": "Generate positive test scenario for mobile deposits with critical priority",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9792 Feature: Mobile Deposits Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8765,
    "input_text": "Automated test case for security settings",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8765 Feature: Security Settings Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5448,
    "input_text": "Generate positive test scenario for account overview with medium priority",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5448 Feature: Account Overview Priority: Medium Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5632,
    "input_text": "Write test case to verify account overview functionality. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5632 Feature: Account Overview Priority: Critical Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7563,
    "input_text": "Test specification for profile settings - edge scenario. Regression testing",
    "target_text": "Test Case: Verify Profile Settings Boundary Conditions Test ID: TC-PROF-7563 Feature: Profile Settings Priority: Low Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9344,
    "input_text": "BDD scenario for mobile deposits feature",
    "target_text": "Test Case: Verify Mobile Deposits Security Controls Test ID: TC-DEP-9344 Feature: Mobile Deposits Priority: Medium Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "mobile_deposits",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2111,
    "input_text": "BDD scenario for fund transfer feature",
    "target_text": "Test Case: Verify Fund Transfer Boundary Conditions Test ID: TC-FUND-2111 Feature: Fund Transfer Priority: Medium Scenario: Edge Preconditions: • User has exactly minimum balance required Test Steps: Given user accesses fund transfer feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Transfer processes at exact limit",
    "feature": "fund_transfer",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8591,
    "input_text": "BDD scenario for security settings feature. Priority: Low",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8591 Feature: Security Settings Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8295,
    "input_text": "Test specification for security settings - negative scenario. Mobile banking feature",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8295 Feature: Security Settings Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1577,
    "input_text": "Write test case to verify fund transfer functionality",
    "target_text": "Test Case: Verify Fund Transfer Security Controls Test ID: TC-FUND-1577 Feature: Fund Transfer Priority: Medium Scenario: Security Preconditions: • Transaction monitoring is enabled Test Steps: Given user accesses fund transfer feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Transaction flagged for security review Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "fund_transfer",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2978,
    "input_text": "User acceptance test for bill payment",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-2978 Feature: Bill Payment Priority: Critical Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 583,
    "input_text": "Automated test case for login authentication. Mobile banking feature",
    "target_text": "Test Case: Verify Login Authentication Boundary Conditions Test ID: TC-AUTH-0583 Feature: Login Authentication Priority: Medium Scenario: Edge Preconditions: • Multiple login sessions are configured Test Steps: Given user accesses login authentication feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • System handles concurrent login attempts",
    "feature": "login_authentication",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5198,
    "input_text": "Test specification for account overview - security scenario",
    "target_text": "Test Case: Verify Account Overview Security Controls Test ID: TC-ACCT-5198 Feature: Account Overview Priority: High Scenario: Security Preconditions: • Account access is properly configured Test Steps: Given user accesses account overview feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Audit log created for access",
    "feature": "account_overview",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5900,
    "input_text": "QA test case for mobile banking transaction alerts",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-5900 Feature: Transaction Alerts Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5889,
    "input_text": "Create a security test case for transaction alerts. Scenario type: security",
    "target_text": "Test Case: Verify Transaction Alerts Security Controls Test ID: TC-ALRT-5889 Feature: Transaction Alerts Priority: Critical Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "transaction_alerts",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5273,
    "input_text": "Test specification for account overview - positive scenario. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5273 Feature: Account Overview Priority: Medium Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9740,
    "input_text": "QA test case for mobile banking mobile deposits",
    "target_text": "Test Case: Verify Mobile Deposits Fails with Invalid Input Test ID: TC-DEP-9740 Feature: Mobile Deposits Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7279,
    "input_text": "BDD scenario for beneficiary management feature. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-7279 Feature: Beneficiary Management Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2413,
    "input_text": "BDD scenario for fund transfer feature. Priority: Critical",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-2413 Feature: Fund Transfer Priority: Critical Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5844,
    "input_text": "User acceptance test for transaction alerts",
    "target_text": "Test Case: Verify Transaction Alerts Boundary Conditions Test ID: TC-ALRT-5844 Feature: Transaction Alerts Priority: Medium Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3614,
    "input_text": "Automated test case for bill payment. Scenario type: security",
    "target_text": "Test Case: Verify Bill Payment Security Controls Test ID: TC-BILL-3614 Feature: Bill Payment Priority: Critical Scenario: Security Preconditions: • Payment gateway security is configured Test Steps: Given user accesses bill payment feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Payment requires additional authentication Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "bill_payment",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6994,
    "input_text": "User acceptance test for beneficiary management. Regression testing",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-6994 Feature: Beneficiary Management Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5575,
    "input_text": "BDD scenario for account overview feature. Priority: Medium",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5575 Feature: Account Overview Priority: Medium Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5790,
    "input_text": "Automated test case for transaction alerts. Mobile banking feature",
    "target_text": "Test Case: Verify Transaction Alerts Boundary Conditions Test ID: TC-ALRT-5790 Feature: Transaction Alerts Priority: Medium Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9368,
    "input_text": "User acceptance test for mobile deposits. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9368 Feature: Mobile Deposits Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3015,
    "input_text": "QA test case for mobile banking bill payment",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3015 Feature: Bill Payment Priority: Low Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4866,
    "input_text": "QA test case for mobile banking account overview. Regression testing",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-4866 Feature: Account Overview Priority: Critical Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2474,
    "input_text": "Automated test case for fund transfer",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-2474 Feature: Fund Transfer Priority: Medium Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked And balance should remain unchanged Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6683,
    "input_text": "Create a security test case for beneficiary management",
    "target_text": "Test Case: Verify Beneficiary Management Security Controls Test ID: TC-BNFY-6683 Feature: Beneficiary Management Priority: Low Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "beneficiary_management",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9265,
    "input_text": "Generate negative test scenario for security settings with critical priority. Mobile banking feature",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-9265 Feature: Security Settings Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3773,
    "input_text": "User acceptance test for card management",
    "target_text": "Test Case: Verify Card Management Boundary Conditions Test ID: TC-CARD-3773 Feature: Card Management Priority: Medium Scenario: Edge Preconditions: • Multiple cards with different limits Test Steps: Given user accesses card management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Card limit enforcement verified",
    "feature": "card_management",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6625,
    "input_text": "BDD scenario for beneficiary management feature",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-6625 Feature: Beneficiary Management Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8948,
    "input_text": "Generate positive test scenario for security settings with critical priority",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8948 Feature: Security Settings Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6272,
    "input_text": "Create a positive test case for transaction alerts",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-6272 Feature: Transaction Alerts Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2553,
    "input_text": "Write test case to verify fund transfer functionality. Priority: Critical",
    "target_text": "Test Case: Verify Fund Transfer Boundary Conditions Test ID: TC-FUND-2553 Feature: Fund Transfer Priority: Critical Scenario: Edge Preconditions: • User has exactly minimum balance required Test Steps: Given user accesses fund transfer feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Transfer processes at exact limit",
    "feature": "fund_transfer",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9404,
    "input_text": "Create a edge test case for mobile deposits",
    "target_text": "Test Case: Verify Mobile Deposits Boundary Conditions Test ID: TC-DEP-9404 Feature: Mobile Deposits Priority: Low Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7147,
    "input_text": "Generate security test scenario for beneficiary management with medium priority. Priority: Medium",
    "target_text": "Test Case: Verify Beneficiary Management Security Controls Test ID: TC-BNFY-7147 Feature: Beneficiary Management Priority: Medium Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8180,
    "input_text": "Write test case to verify security settings functionality. Scenario type: edge",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-8180 Feature: Security Settings Priority: High Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1865,
    "input_text": "User acceptance test for fund transfer",
    "target_text": "Test Case: Verify Fund Transfer Boundary Conditions Test ID: TC-FUND-1865 Feature: Fund Transfer Priority: Medium Scenario: Edge Preconditions: • User has exactly minimum balance required Test Steps: Given user accesses fund transfer feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Transfer processes at exact limit",
    "feature": "fund_transfer",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9111,
    "input_text": "BDD scenario for security settings feature",
    "target_text": "Test Case: Verify Security Settings Security Controls Test ID: TC-SEC-9111 Feature: Security Settings Priority: Low Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1313,
    "input_text": "Write test case to verify fund transfer functionality. Priority: Low",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1313 Feature: Fund Transfer Priority: Low Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1147,
    "input_text": "Automated test case for login authentication",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-1147 Feature: Login Authentication Priority: Medium Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear And user should remain on login screen Expected Result: • Login rejected with clear error message Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2200,
    "input_text": "Write test case to verify fund transfer functionality. Scenario type: negative",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-2200 Feature: Fund Transfer Priority: Low Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6338,
    "input_text": "Automated test case for transaction alerts. Priority: Medium",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-6338 Feature: Transaction Alerts Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4162,
    "input_text": "QA test case for mobile banking card management. Priority: Low",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4162 Feature: Card Management Priority: Low Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5009,
    "input_text": "Create a positive test case for account overview. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5009 Feature: Account Overview Priority: Low Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3298,
    "input_text": "QA test case for mobile banking bill payment. Regression testing",
    "target_text": "Test Case: Verify Bill Payment Security Controls Test ID: TC-BILL-3298 Feature: Bill Payment Priority: Critical Scenario: Security Preconditions: • Payment gateway security is configured Test Steps: Given user accesses bill payment feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Payment requires additional authentication",
    "feature": "bill_payment",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3461,
    "input_text": "Generate negative test scenario for bill payment with critical priority",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3461 Feature: Bill Payment Priority: Critical Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3214,
    "input_text": "Test specification for bill payment - positive scenario",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3214 Feature: Bill Payment Priority: Critical Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1506,
    "input_text": "Automated test case for fund transfer. Priority: High",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1506 Feature: Fund Transfer Priority: High Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Then transfer should be processed successfully Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8556,
    "input_text": "Test specification for security settings - negative scenario",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8556 Feature: Security Settings Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3560,
    "input_text": "Automated test case for bill payment. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3560 Feature: Bill Payment Priority: Medium Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Expected Result: • Payment processed with receipt number generated",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 708,
    "input_text": "QA test case for mobile banking login authentication",
    "target_text": "Test Case: Verify Login Authentication Security Controls Test ID: TC-AUTH-0708 Feature: Login Authentication Priority: Low Scenario: Security Preconditions: • Security monitoring is active And login attempts are tracked Test Steps: Given user accesses login authentication feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Account locked after failed attempts Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "login_authentication",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5135,
    "input_text": "BDD scenario for account overview feature",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5135 Feature: Account Overview Priority: Low Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5517,
    "input_text": "BDD scenario for account overview feature",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5517 Feature: Account Overview Priority: Critical Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9113,
    "input_text": "Create a positive test case for security settings",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-9113 Feature: Security Settings Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5864,
    "input_text": "BDD scenario for transaction alerts feature",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-5864 Feature: Transaction Alerts Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5426,
    "input_text": "User acceptance test for account overview. Scenario type: negative",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5426 Feature: Account Overview Priority: High Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4374,
    "input_text": "Write test case to verify card management functionality",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4374 Feature: Card Management Priority: Low Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7007,
    "input_text": "BDD scenario for beneficiary management feature. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-7007 Feature: Beneficiary Management Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8006,
    "input_text": "User acceptance test for profile settings",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-8006 Feature: Profile Settings Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 993,
    "input_text": "BDD scenario for login authentication feature",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0993 Feature: Login Authentication Priority: Medium Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear And user should remain on login screen Expected Result: • Login rejected with clear error message Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8168,
    "input_text": "QA test case for mobile banking security settings",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8168 Feature: Security Settings Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7111,
    "input_text": "Generate positive test scenario for beneficiary management with low priority",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-7111 Feature: Beneficiary Management Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9168,
    "input_text": "Automated test case for security settings",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-9168 Feature: Security Settings Priority: Critical Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7764,
    "input_text": "Automated test case for profile settings. Mobile banking feature",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-7764 Feature: Profile Settings Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 552,
    "input_text": "Generate positive test scenario for login authentication with critical priority",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0552 Feature: Login Authentication Priority: Critical Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard And user profile should be displayed Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3139,
    "input_text": "Automated test case for bill payment",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3139 Feature: Bill Payment Priority: Critical Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed And receipt should be generated Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 580,
    "input_text": "User acceptance test for login authentication",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0580 Feature: Login Authentication Priority: High Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear And user should remain on login screen Expected Result: • Login rejected with clear error message",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3568,
    "input_text": "Create a edge test case for bill payment. Regression testing",
    "target_text": "Test Case: Verify Bill Payment Boundary Conditions Test ID: TC-BILL-3568 Feature: Bill Payment Priority: Critical Scenario: Edge Preconditions: • Bill amount equals account balance Test Steps: Given user accesses bill payment feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Payment handles maximum amount",
    "feature": "bill_payment",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 303,
    "input_text": "Write test case to verify login authentication functionality. Regression testing",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0303 Feature: Login Authentication Priority: Critical Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard Expected Result: • Login successful with dashboard displayed within 2 seconds Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5327,
    "input_text": "Generate negative test scenario for account overview with high priority",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5327 Feature: Account Overview Priority: High Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9754,
    "input_text": "Generate negative test scenario for mobile deposits with medium priority",
    "target_text": "Test Case: Verify Mobile Deposits Fails with Invalid Input Test ID: TC-DEP-9754 Feature: Mobile Deposits Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "mobile_deposits",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4132,
    "input_text": "Generate negative test scenario for card management with low priority. Priority: Low",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4132 Feature: Card Management Priority: Low Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7709,
    "input_text": "BDD scenario for profile settings feature",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7709 Feature: Profile Settings Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9691,
    "input_text": "Test specification for mobile deposits - negative scenario. Regression testing",
    "target_text": "Test Case: Verify Mobile Deposits Fails with Invalid Input Test ID: TC-DEP-9691 Feature: Mobile Deposits Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4798,
    "input_text": "Automated test case for account overview. Priority: Low",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-4798 Feature: Account Overview Priority: Low Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8699,
    "input_text": "Write test case to verify security settings functionality",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8699 Feature: Security Settings Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4,
    "input_text": "Write test case to verify login authentication functionality. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0004 Feature: Login Authentication Priority: Critical Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5382,
    "input_text": "BDD scenario for account overview feature",
    "target_text": "Test Case: Verify Account Overview Security Controls Test ID: TC-ACCT-5382 Feature: Account Overview Priority: Low Scenario: Security Preconditions: • Account access is properly configured Test Steps: Given user accesses account overview feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Audit log created for access",
    "feature": "account_overview",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4057,
    "input_text": "Create a positive test case for card management. Regression testing",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-4057 Feature: Card Management Priority: Low Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3090,
    "input_text": "Test specification for bill payment - negative scenario",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3090 Feature: Bill Payment Priority: High Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6836,
    "input_text": "Test specification for beneficiary management - negative scenario",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-6836 Feature: Beneficiary Management Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1938,
    "input_text": "BDD scenario for fund transfer feature",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1938 Feature: Fund Transfer Priority: Medium Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 Expected Result: • Transfer completed with confirmation And updated balance Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2589,
    "input_text": "QA test case for mobile banking fund transfer",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-2589 Feature: Fund Transfer Priority: Critical Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked And balance should remain unchanged Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7051,
    "input_text": "User acceptance test for beneficiary management",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-7051 Feature: Beneficiary Management Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4452,
    "input_text": "Automated test case for card management. Priority: High",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-4452 Feature: Card Management Priority: High Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3919,
    "input_text": "Automated test case for card management. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-3919 Feature: Card Management Priority: Low Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6451,
    "input_text": "QA test case for mobile banking transaction alerts. Scenario type: negative",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-6451 Feature: Transaction Alerts Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7556,
    "input_text": "Create a negative test case for profile settings. Regression testing",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-7556 Feature: Profile Settings Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4484,
    "input_text": "User acceptance test for card management. Mobile banking feature",
    "target_text": "Test Case: Verify Card Management Boundary Conditions Test ID: TC-CARD-4484 Feature: Card Management Priority: Low Scenario: Edge Preconditions: • Multiple cards with different limits Test Steps: Given user accesses card management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Card limit enforcement verified",
    "feature": "card_management",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5694,
    "input_text": "Automated test case for account overview",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5694 Feature: Account Overview Priority: Low Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4702,
    "input_text": "Automated test case for account overview",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-4702 Feature: Account Overview Priority: Medium Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3396,
    "input_text": "QA test case for mobile banking bill payment",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3396 Feature: Bill Payment Priority: Low Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9463,
    "input_text": "QA test case for mobile banking mobile deposits. Mobile banking feature",
    "target_text": "Test Case: Verify Mobile Deposits Fails with Invalid Input Test ID: TC-DEP-9463 Feature: Mobile Deposits Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "mobile_deposits",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1325,
    "input_text": "Test specification for fund transfer - edge scenario",
    "target_text": "Test Case: Verify Fund Transfer Boundary Conditions Test ID: TC-FUND-1325 Feature: Fund Transfer Priority: Low Scenario: Edge Preconditions: • User has exactly minimum balance required Test Steps: Given user accesses fund transfer feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Transfer processes at exact limit",
    "feature": "fund_transfer",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2375,
    "input_text": "Write test case to verify fund transfer functionality",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-2375 Feature: Fund Transfer Priority: Medium Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked And balance should remain unchanged Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7319,
    "input_text": "Test specification for profile settings - negative scenario. Mobile banking feature",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-7319 Feature: Profile Settings Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5111,
    "input_text": "BDD scenario for account overview feature. Priority: Low",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5111 Feature: Account Overview Priority: Low Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4233,
    "input_text": "Automated test case for card management. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-4233 Feature: Card Management Priority: High Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5663,
    "input_text": "Generate negative test scenario for account overview with medium priority",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5663 Feature: Account Overview Priority: Medium Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4712,
    "input_text": "User acceptance test for account overview",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-4712 Feature: Account Overview Priority: High Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1039,
    "input_text": "User acceptance test for login authentication. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-1039 Feature: Login Authentication Priority: Medium Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard And user profile should be displayed Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7293,
    "input_text": "Create a positive test case for beneficiary management",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-7293 Feature: Beneficiary Management Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 95,
    "input_text": "BDD scenario for login authentication feature",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0095 Feature: Login Authentication Priority: Low Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear Expected Result: • Login rejected with clear error message",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 325,
    "input_text": "QA test case for mobile banking login authentication",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0325 Feature: Login Authentication Priority: Low Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear And user should remain on login screen Expected Result: • Login rejected with clear error message Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1221,
    "input_text": "QA test case for mobile banking fund transfer",
    "target_text": "Test Case: Verify Fund Transfer Security Controls Test ID: TC-FUND-1221 Feature: Fund Transfer Priority: Medium Scenario: Security Preconditions: • Transaction monitoring is enabled Test Steps: Given user accesses fund transfer feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Transaction flagged for security review Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "fund_transfer",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9867,
    "input_text": "Write test case to verify mobile deposits functionality",
    "target_text": "Test Case: Verify Mobile Deposits Boundary Conditions Test ID: TC-DEP-9867 Feature: Mobile Deposits Priority: High Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "edge",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1246,
    "input_text": "BDD scenario for fund transfer feature. Regression testing",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1246 Feature: Fund Transfer Priority: High Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9033,
    "input_text": "BDD scenario for security settings feature. Priority: Critical",
    "target_text": "Test Case: Verify Security Settings Security Controls Test ID: TC-SEC-9033 Feature: Security Settings Priority: Critical Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7867,
    "input_text": "Create a security test case for profile settings. Mobile banking feature",
    "target_text": "Test Case: Verify Profile Settings Security Controls Test ID: TC-PROF-7867 Feature: Profile Settings Priority: Low Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "profile_settings",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5425,
    "input_text": "QA test case for mobile banking account overview",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5425 Feature: Account Overview Priority: High Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1578,
    "input_text": "QA test case for mobile banking fund transfer",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1578 Feature: Fund Transfer Priority: High Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9205,
    "input_text": "Generate positive test scenario for security settings with low priority. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-9205 Feature: Security Settings Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 798,
    "input_text": "Write test case to verify login authentication functionality",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0798 Feature: Login Authentication Priority: Low Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9719,
    "input_text": "Create a edge test case for mobile deposits. Mobile banking feature",
    "target_text": "Test Case: Verify Mobile Deposits Boundary Conditions Test ID: TC-DEP-9719 Feature: Mobile Deposits Priority: Medium Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1317,
    "input_text": "Generate positive test scenario for fund transfer with high priority. Regression testing",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1317 Feature: Fund Transfer Priority: High Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Then transfer should be processed successfully And confirmation number should be displayed Expected Result: • Transfer completed with confirmation And updated balance Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4337,
    "input_text": "Generate edge test scenario for card management with medium priority. Regression testing",
    "target_text": "Test Case: Verify Card Management Boundary Conditions Test ID: TC-CARD-4337 Feature: Card Management Priority: Medium Scenario: Edge Preconditions: • Multiple cards with different limits Test Steps: Given user accesses card management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Card limit enforcement verified",
    "feature": "card_management",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9182,
    "input_text": "Create a edge test case for security settings",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-9182 Feature: Security Settings Priority: Critical Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5563,
    "input_text": "Automated test case for account overview",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5563 Feature: Account Overview Priority: Medium Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6942,
    "input_text": "Create a positive test case for beneficiary management",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-6942 Feature: Beneficiary Management Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4114,
    "input_text": "Automated test case for card management",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-4114 Feature: Card Management Priority: Critical Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8353,
    "input_text": "Automated test case for security settings",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8353 Feature: Security Settings Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8510,
    "input_text": "Create a edge test case for security settings. Scenario type: edge",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-8510 Feature: Security Settings Priority: Low Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4253,
    "input_text": "User acceptance test for card management",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4253 Feature: Card Management Priority: Medium Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6089,
    "input_text": "Generate edge test scenario for transaction alerts with critical priority",
    "target_text": "Test Case: Verify Transaction Alerts Boundary Conditions Test ID: TC-ALRT-6089 Feature: Transaction Alerts Priority: Critical Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7829,
    "input_text": "Test specification for profile settings - positive scenario. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7829 Feature: Profile Settings Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5780,
    "input_text": "Test specification for transaction alerts - positive scenario",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-5780 Feature: Transaction Alerts Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9276,
    "input_text": "Create a positive test case for security settings. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-9276 Feature: Security Settings Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1856,
    "input_text": "QA test case for mobile banking fund transfer",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1856 Feature: Fund Transfer Priority: Medium Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked And balance should remain unchanged Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9675,
    "input_text": "User acceptance test for mobile deposits. Regression testing",
    "target_text": "Test Case: Verify Mobile Deposits Fails with Invalid Input Test ID: TC-DEP-9675 Feature: Mobile Deposits Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1036,
    "input_text": "Create a security test case for login authentication",
    "target_text": "Test Case: Verify Login Authentication Security Controls Test ID: TC-AUTH-1036 Feature: Login Authentication Priority: Low Scenario: Security Preconditions: • Security monitoring is active And login attempts are tracked Test Steps: Given user accesses login authentication feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Account locked after failed attempts",
    "feature": "login_authentication",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4046,
    "input_text": "BDD scenario for card management feature",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-4046 Feature: Card Management Priority: Low Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5686,
    "input_text": "Test specification for account overview - positive scenario",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5686 Feature: Account Overview Priority: Medium Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 862,
    "input_text": "QA test case for mobile banking login authentication",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0862 Feature: Login Authentication Priority: High Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear And user should remain on login screen Expected Result: • Login rejected with clear error message Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7541,
    "input_text": "Write test case to verify profile settings functionality. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7541 Feature: Profile Settings Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5011,
    "input_text": "Generate edge test scenario for account overview with high priority",
    "target_text": "Test Case: Verify Account Overview Boundary Conditions Test ID: TC-ACCT-5011 Feature: Account Overview Priority: High Scenario: Edge Preconditions: • User has maximum allowed accounts Test Steps: Given user accesses account overview feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Performance acceptable with max accounts",
    "feature": "account_overview",
    "scenario_type": "edge",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4572,
    "input_text": "Create a positive test case for card management",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-4572 Feature: Card Management Priority: Medium Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8942,
    "input_text": "BDD scenario for security settings feature",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-8942 Feature: Security Settings Priority: Medium Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7830,
    "input_text": "Create a negative test case for profile settings. Scenario type: negative",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-7830 Feature: Profile Settings Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4382,
    "input_text": "Generate negative test scenario for card management with low priority",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4382 Feature: Card Management Priority: Low Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5498,
    "input_text": "Create a positive test case for account overview. Priority: Critical",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5498 Feature: Account Overview Priority: Critical Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7018,
    "input_text": "QA test case for mobile banking beneficiary management",
    "target_text": "Test Case: Verify Beneficiary Management Security Controls Test ID: TC-BNFY-7018 Feature: Beneficiary Management Priority: Critical Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4827,
    "input_text": "QA test case for mobile banking account overview",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-4827 Feature: Account Overview Priority: High Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4190,
    "input_text": "Test specification for card management - negative scenario",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4190 Feature: Card Management Priority: Critical Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4538,
    "input_text": "Create a negative test case for card management",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4538 Feature: Card Management Priority: High Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5421,
    "input_text": "Write test case to verify account overview functionality",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5421 Feature: Account Overview Priority: Low Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7470,
    "input_text": "Automated test case for profile settings",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7470 Feature: Profile Settings Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5268,
    "input_text": "BDD scenario for account overview feature",
    "target_text": "Test Case: Verify Account Overview Security Controls Test ID: TC-ACCT-5268 Feature: Account Overview Priority: Medium Scenario: Security Preconditions: • Account access is properly configured Test Steps: Given user accesses account overview feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Audit log created for access Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "account_overview",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1514,
    "input_text": "Create a positive test case for fund transfer",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1514 Feature: Fund Transfer Priority: Critical Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8832,
    "input_text": "BDD scenario for security settings feature",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8832 Feature: Security Settings Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 243,
    "input_text": "Write test case to verify login authentication functionality. Scenario type: negative",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0243 Feature: Login Authentication Priority: Medium Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear And user should remain on login screen Expected Result: • Login rejected with clear error message Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6748,
    "input_text": "User acceptance test for beneficiary management. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-6748 Feature: Beneficiary Management Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7530,
    "input_text": "Generate positive test scenario for profile settings with low priority",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7530 Feature: Profile Settings Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1731,
    "input_text": "BDD scenario for fund transfer feature. Scenario type: negative",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1731 Feature: Fund Transfer Priority: Critical Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3103,
    "input_text": "Write test case to verify bill payment functionality",
    "target_text": "Test Case: Verify Bill Payment Boundary Conditions Test ID: TC-BILL-3103 Feature: Bill Payment Priority: High Scenario: Edge Preconditions: • Bill amount equals account balance Test Steps: Given user accesses bill payment feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Payment handles maximum amount",
    "feature": "bill_payment",
    "scenario_type": "edge",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3067,
    "input_text": "BDD scenario for bill payment feature",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3067 Feature: Bill Payment Priority: High Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6134,
    "input_text": "Create a negative test case for transaction alerts. Regression testing",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-6134 Feature: Transaction Alerts Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7825,
    "input_text": "BDD scenario for profile settings feature",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-7825 Feature: Profile Settings Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2429,
    "input_text": "Test specification for fund transfer - edge scenario. Regression testing",
    "target_text": "Test Case: Verify Fund Transfer Boundary Conditions Test ID: TC-FUND-2429 Feature: Fund Transfer Priority: Medium Scenario: Edge Preconditions: • User has exactly minimum balance required Test Steps: Given user accesses fund transfer feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Transfer processes at exact limit",
    "feature": "fund_transfer",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4364,
    "input_text": "User acceptance test for card management. Priority: Medium",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-4364 Feature: Card Management Priority: Medium Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4705,
    "input_text": "User acceptance test for account overview",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-4705 Feature: Account Overview Priority: Low Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 735,
    "input_text": "Create a negative test case for login authentication. Scenario type: negative",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0735 Feature: Login Authentication Priority: Critical Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Expected Result: • Login rejected with clear error message Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2671,
    "input_text": "Write test case to verify fund transfer functionality",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-2671 Feature: Fund Transfer Priority: High Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3511,
    "input_text": "Write test case to verify bill payment functionality",
    "target_text": "Test Case: Verify Bill Payment Boundary Conditions Test ID: TC-BILL-3511 Feature: Bill Payment Priority: Low Scenario: Edge Preconditions: • Bill amount equals account balance Test Steps: Given user accesses bill payment feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Payment handles maximum amount",
    "feature": "bill_payment",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9390,
    "input_text": "Test specification for mobile deposits - positive scenario. Priority: Critical",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9390 Feature: Mobile Deposits Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4029,
    "input_text": "Test specification for card management - negative scenario",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4029 Feature: Card Management Priority: High Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9912,
    "input_text": "Test specification for mobile deposits - positive scenario",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9912 Feature: Mobile Deposits Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2588,
    "input_text": "Generate edge test scenario for fund transfer with high priority",
    "target_text": "Test Case: Verify Fund Transfer Boundary Conditions Test ID: TC-FUND-2588 Feature: Fund Transfer Priority: High Scenario: Edge Preconditions: • User has exactly minimum balance required Test Steps: Given user accesses fund transfer feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Transfer processes at exact limit",
    "feature": "fund_transfer",
    "scenario_type": "edge",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5800,
    "input_text": "Generate positive test scenario for transaction alerts with medium priority",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-5800 Feature: Transaction Alerts Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9923,
    "input_text": "User acceptance test for mobile deposits. Scenario type: negative",
    "target_text": "Test Case: Verify Mobile Deposits Fails with Invalid Input Test ID: TC-DEP-9923 Feature: Mobile Deposits Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "mobile_deposits",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9270,
    "input_text": "Generate positive test scenario for security settings with low priority. Priority: Low",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-9270 Feature: Security Settings Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 786,
    "input_text": "Create a positive test case for login authentication. Regression testing",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0786 Feature: Login Authentication Priority: Low Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Expected Result: • Login successful with dashboard displayed within 2 seconds Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4819,
    "input_text": "Generate negative test scenario for account overview with critical priority. Priority: Critical",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-4819 Feature: Account Overview Priority: Critical Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8853,
    "input_text": "BDD scenario for security settings feature",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-8853 Feature: Security Settings Priority: Critical Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7232,
    "input_text": "User acceptance test for beneficiary management",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-7232 Feature: Beneficiary Management Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5956,
    "input_text": "User acceptance test for transaction alerts",
    "target_text": "Test Case: Verify Transaction Alerts Security Controls Test ID: TC-ALRT-5956 Feature: Transaction Alerts Priority: Medium Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7984,
    "input_text": "Generate edge test scenario for profile settings with low priority. Priority: Low",
    "target_text": "Test Case: Verify Profile Settings Boundary Conditions Test ID: TC-PROF-7984 Feature: Profile Settings Priority: Low Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6642,
    "input_text": "User acceptance test for beneficiary management",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-6642 Feature: Beneficiary Management Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3796,
    "input_text": "QA test case for mobile banking card management. Regression testing",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-3796 Feature: Card Management Priority: High Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2063,
    "input_text": "User acceptance test for fund transfer",
    "target_text": "Test Case: Verify Fund Transfer Boundary Conditions Test ID: TC-FUND-2063 Feature: Fund Transfer Priority: Critical Scenario: Edge Preconditions: • User has exactly minimum balance required Test Steps: Given user accesses fund transfer feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Transfer processes at exact limit",
    "feature": "fund_transfer",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1517,
    "input_text": "User acceptance test for fund transfer. Regression testing",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1517 Feature: Fund Transfer Priority: Medium Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Then transfer should be processed successfully And confirmation number should be displayed Expected Result: • Transfer completed with confirmation And updated balance Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8150,
    "input_text": "Write test case to verify security settings functionality",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-8150 Feature: Security Settings Priority: Low Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7731,
    "input_text": "QA test case for mobile banking profile settings",
    "target_text": "Test Case: Verify Profile Settings Boundary Conditions Test ID: TC-PROF-7731 Feature: Profile Settings Priority: Critical Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4745,
    "input_text": "Write test case to verify account overview functionality. Regression testing",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-4745 Feature: Account Overview Priority: Critical Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7188,
    "input_text": "Generate negative test scenario for beneficiary management with critical priority",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-7188 Feature: Beneficiary Management Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1291,
    "input_text": "Create a security test case for fund transfer. Scenario type: security",
    "target_text": "Test Case: Verify Fund Transfer Security Controls Test ID: TC-FUND-1291 Feature: Fund Transfer Priority: Medium Scenario: Security Preconditions: • Transaction monitoring is enabled Test Steps: Given user accesses fund transfer feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Transaction flagged for security review Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "fund_transfer",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4075,
    "input_text": "Automated test case for card management",
    "target_text": "Test Case: Verify Card Management Security Controls Test ID: TC-CARD-4075 Feature: Card Management Priority: High Scenario: Security Preconditions: • Card security settings are enabled Test Steps: Given user accesses card management feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Security alert triggered Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "card_management",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3025,
    "input_text": "Create a positive test case for bill payment",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3025 Feature: Bill Payment Priority: Critical Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed And receipt should be generated Expected Result: • Payment processed with receipt number generated",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9338,
    "input_text": "Write test case to verify mobile deposits functionality. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9338 Feature: Mobile Deposits Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2153,
    "input_text": "Generate negative test scenario for fund transfer with high priority",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-2153 Feature: Fund Transfer Priority: High Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2731,
    "input_text": "Create a negative test case for bill payment. Scenario type: negative",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-2731 Feature: Bill Payment Priority: Low Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2005,
    "input_text": "Create a positive test case for fund transfer. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-2005 Feature: Fund Transfer Priority: High Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 Expected Result: • Transfer completed with confirmation And updated balance Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4699,
    "input_text": "Write test case to verify card management functionality. Scenario type: security",
    "target_text": "Test Case: Verify Card Management Security Controls Test ID: TC-CARD-4699 Feature: Card Management Priority: Medium Scenario: Security Preconditions: • Card security settings are enabled Test Steps: Given user accesses card management feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Security alert triggered",
    "feature": "card_management",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8931,
    "input_text": "Generate edge test scenario for security settings with critical priority. Regression testing",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-8931 Feature: Security Settings Priority: Critical Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 78,
    "input_text": "User acceptance test for login authentication",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0078 Feature: Login Authentication Priority: Low Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1065,
    "input_text": "User acceptance test for login authentication. Priority: High",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-1065 Feature: Login Authentication Priority: High Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8897,
    "input_text": "User acceptance test for security settings. Priority: Medium",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-8897 Feature: Security Settings Priority: Medium Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3733,
    "input_text": "Generate positive test scenario for card management with medium priority. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-3733 Feature: Card Management Priority: Medium Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6018,
    "input_text": "BDD scenario for transaction alerts feature",
    "target_text": "Test Case: Verify Transaction Alerts Security Controls Test ID: TC-ALRT-6018 Feature: Transaction Alerts Priority: Low Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "transaction_alerts",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 834,
    "input_text": "Test specification for login authentication - security scenario",
    "target_text": "Test Case: Verify Login Authentication Security Controls Test ID: TC-AUTH-0834 Feature: Login Authentication Priority: Medium Scenario: Security Preconditions: • Security monitoring is active And login attempts are tracked Test Steps: Given user accesses login authentication feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Account locked after failed attempts Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "login_authentication",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3684,
    "input_text": "Generate edge test scenario for bill payment with critical priority",
    "target_text": "Test Case: Verify Bill Payment Boundary Conditions Test ID: TC-BILL-3684 Feature: Bill Payment Priority: Critical Scenario: Edge Preconditions: • Bill amount equals account balance Test Steps: Given user accesses bill payment feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Payment handles maximum amount",
    "feature": "bill_payment",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1175,
    "input_text": "Create a positive test case for login authentication",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-1175 Feature: Login Authentication Priority: High Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard Expected Result: • Login successful with dashboard displayed within 2 seconds Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3429,
    "input_text": "Generate negative test scenario for bill payment with medium priority",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3429 Feature: Bill Payment Priority: Medium Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2224,
    "input_text": "User acceptance test for fund transfer",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-2224 Feature: Fund Transfer Priority: High Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3239,
    "input_text": "Automated test case for bill payment",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3239 Feature: Bill Payment Priority: Medium Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Expected Result: • Payment processed with receipt number generated",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1390,
    "input_text": "Write test case to verify fund transfer functionality",
    "target_text": "Test Case: Verify Fund Transfer Boundary Conditions Test ID: TC-FUND-1390 Feature: Fund Transfer Priority: Critical Scenario: Edge Preconditions: • User has exactly minimum balance required Test Steps: Given user accesses fund transfer feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Transfer processes at exact limit",
    "feature": "fund_transfer",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8552,
    "input_text": "Write test case to verify security settings functionality. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8552 Feature: Security Settings Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4569,
    "input_text": "Generate negative test scenario for card management with medium priority",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4569 Feature: Card Management Priority: Medium Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5115,
    "input_text": "Write test case to verify account overview functionality",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5115 Feature: Account Overview Priority: Low Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 381,
    "input_text": "Generate security test scenario for login authentication with critical priority. Scenario type: security",
    "target_text": "Test Case: Verify Login Authentication Security Controls Test ID: TC-AUTH-0381 Feature: Login Authentication Priority: Critical Scenario: Security Preconditions: • Security monitoring is active And login attempts are tracked Test Steps: Given user accesses login authentication feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Account locked after failed attempts",
    "feature": "login_authentication",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9646,
    "input_text": "User acceptance test for mobile deposits",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9646 Feature: Mobile Deposits Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2799,
    "input_text": "Generate positive test scenario for bill payment with high priority. Priority: High",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-2799 Feature: Bill Payment Priority: High Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed And receipt should be generated Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6764,
    "input_text": "QA test case for mobile banking beneficiary management",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-6764 Feature: Beneficiary Management Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5887,
    "input_text": "BDD scenario for transaction alerts feature",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-5887 Feature: Transaction Alerts Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8654,
    "input_text": "Test specification for security settings - negative scenario. Regression testing",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8654 Feature: Security Settings Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 797,
    "input_text": "Generate security test scenario for login authentication with high priority",
    "target_text": "Test Case: Verify Login Authentication Security Controls Test ID: TC-AUTH-0797 Feature: Login Authentication Priority: High Scenario: Security Preconditions: • Security monitoring is active And login attempts are tracked Test Steps: Given user accesses login authentication feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Account locked after failed attempts Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "login_authentication",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5974,
    "input_text": "Automated test case for transaction alerts. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-5974 Feature: Transaction Alerts Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 18,
    "input_text": "Create a negative test case for login authentication. Mobile banking feature",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0018 Feature: Login Authentication Priority: Low Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear And user should remain on login screen Expected Result: • Login rejected with clear error message Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 894,
    "input_text": "Create a edge test case for login authentication",
    "target_text": "Test Case: Verify Login Authentication Boundary Conditions Test ID: TC-AUTH-0894 Feature: Login Authentication Priority: High Scenario: Edge Preconditions: • Multiple login sessions are configured Test Steps: Given user accesses login authentication feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • System handles concurrent login attempts",
    "feature": "login_authentication",
    "scenario_type": "edge",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8686,
    "input_text": "Write test case to verify security settings functionality. Priority: Critical",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8686 Feature: Security Settings Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 166,
    "input_text": "Test specification for login authentication - edge scenario. Priority: Critical",
    "target_text": "Test Case: Verify Login Authentication Boundary Conditions Test ID: TC-AUTH-0166 Feature: Login Authentication Priority: Critical Scenario: Edge Preconditions: • Multiple login sessions are configured Test Steps: Given user accesses login authentication feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • System handles concurrent login attempts",
    "feature": "login_authentication",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5184,
    "input_text": "Automated test case for account overview",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5184 Feature: Account Overview Priority: Medium Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7525,
    "input_text": "User acceptance test for profile settings",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7525 Feature: Profile Settings Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8209,
    "input_text": "QA test case for mobile banking security settings",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8209 Feature: Security Settings Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8916,
    "input_text": "QA test case for mobile banking security settings. Mobile banking feature",
    "target_text": "Test Case: Verify Security Settings Security Controls Test ID: TC-SEC-8916 Feature: Security Settings Priority: Low Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "security_settings",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7390,
    "input_text": "Generate positive test scenario for profile settings with medium priority",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7390 Feature: Profile Settings Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 74,
    "input_text": "Test specification for login authentication - positive scenario",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0074 Feature: Login Authentication Priority: Low Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Expected Result: • Login successful with dashboard displayed within 2 seconds Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6379,
    "input_text": "User acceptance test for transaction alerts. Regression testing",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-6379 Feature: Transaction Alerts Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3255,
    "input_text": "Generate positive test scenario for bill payment with low priority",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3255 Feature: Bill Payment Priority: Low Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed And receipt should be generated Expected Result: • Payment processed with receipt number generated",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9493,
    "input_text": "BDD scenario for mobile deposits feature. Regression testing",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9493 Feature: Mobile Deposits Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 315,
    "input_text": "User acceptance test for login authentication",
    "target_text": "Test Case: Verify Login Authentication Security Controls Test ID: TC-AUTH-0315 Feature: Login Authentication Priority: Critical Scenario: Security Preconditions: • Security monitoring is active And login attempts are tracked Test Steps: Given user accesses login authentication feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Account locked after failed attempts",
    "feature": "login_authentication",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5326,
    "input_text": "Write test case to verify account overview functionality",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5326 Feature: Account Overview Priority: Medium Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8696,
    "input_text": "QA test case for mobile banking security settings. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8696 Feature: Security Settings Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3066,
    "input_text": "BDD scenario for bill payment feature",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3066 Feature: Bill Payment Priority: High Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 62,
    "input_text": "Generate security test scenario for login authentication with medium priority. Mobile banking feature",
    "target_text": "Test Case: Verify Login Authentication Security Controls Test ID: TC-AUTH-0062 Feature: Login Authentication Priority: Medium Scenario: Security Preconditions: • Security monitoring is active And login attempts are tracked Test Steps: Given user accesses login authentication feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Account locked after failed attempts Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "login_authentication",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6444,
    "input_text": "User acceptance test for transaction alerts. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-6444 Feature: Transaction Alerts Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5761,
    "input_text": "Write test case to verify transaction alerts functionality. Mobile banking feature",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-5761 Feature: Transaction Alerts Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7027,
    "input_text": "User acceptance test for beneficiary management",
    "target_text": "Test Case: Verify Beneficiary Management Security Controls Test ID: TC-BNFY-7027 Feature: Beneficiary Management Priority: Low Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5090,
    "input_text": "QA test case for mobile banking account overview. Regression testing",
    "target_text": "Test Case: Verify Account Overview Boundary Conditions Test ID: TC-ACCT-5090 Feature: Account Overview Priority: Critical Scenario: Edge Preconditions: • User has maximum allowed accounts Test Steps: Given user accesses account overview feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Performance acceptable with max accounts",
    "feature": "account_overview",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8728,
    "input_text": "User acceptance test for security settings",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8728 Feature: Security Settings Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6991,
    "input_text": "Automated test case for beneficiary management. Scenario type: negative",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-6991 Feature: Beneficiary Management Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3183,
    "input_text": "User acceptance test for bill payment",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3183 Feature: Bill Payment Priority: High Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed And receipt should be generated Expected Result: • Payment processed with receipt number generated",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7611,
    "input_text": "BDD scenario for profile settings feature",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-7611 Feature: Profile Settings Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6117,
    "input_text": "Test specification for transaction alerts - positive scenario. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-6117 Feature: Transaction Alerts Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7095,
    "input_text": "User acceptance test for beneficiary management",
    "target_text": "Test Case: Verify Beneficiary Management Boundary Conditions Test ID: TC-BNFY-7095 Feature: Beneficiary Management Priority: Low Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1408,
    "input_text": "User acceptance test for fund transfer",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1408 Feature: Fund Transfer Priority: Critical Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked And balance should remain unchanged Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2937,
    "input_text": "Create a security test case for bill payment. Scenario type: security",
    "target_text": "Test Case: Verify Bill Payment Security Controls Test ID: TC-BILL-2937 Feature: Bill Payment Priority: High Scenario: Security Preconditions: • Payment gateway security is configured Test Steps: Given user accesses bill payment feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Payment requires additional authentication Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "bill_payment",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1837,
    "input_text": "Write test case to verify fund transfer functionality",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1837 Feature: Fund Transfer Priority: Medium Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3740,
    "input_text": "QA test case for mobile banking card management",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-3740 Feature: Card Management Priority: Critical Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 189,
    "input_text": "QA test case for mobile banking login authentication",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0189 Feature: Login Authentication Priority: Critical Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4117,
    "input_text": "Create a negative test case for card management",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4117 Feature: Card Management Priority: Critical Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7668,
    "input_text": "User acceptance test for profile settings. Regression testing",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-7668 Feature: Profile Settings Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3366,
    "input_text": "Automated test case for bill payment",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3366 Feature: Bill Payment Priority: Critical Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2699,
    "input_text": "BDD scenario for fund transfer feature",
    "target_text": "Test Case: Verify Fund Transfer Boundary Conditions Test ID: TC-FUND-2699 Feature: Fund Transfer Priority: Critical Scenario: Edge Preconditions: • User has exactly minimum balance required Test Steps: Given user accesses fund transfer feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Transfer processes at exact limit",
    "feature": "fund_transfer",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 240,
    "input_text": "QA test case for mobile banking login authentication",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0240 Feature: Login Authentication Priority: High Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5202,
    "input_text": "Generate positive test scenario for account overview with high priority",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5202 Feature: Account Overview Priority: High Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5570,
    "input_text": "Automated test case for account overview",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5570 Feature: Account Overview Priority: Medium Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9840,
    "input_text": "QA test case for mobile banking mobile deposits",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9840 Feature: Mobile Deposits Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2470,
    "input_text": "User acceptance test for fund transfer",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-2470 Feature: Fund Transfer Priority: Critical Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Then transfer should be processed successfully And confirmation number should be displayed Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5855,
    "input_text": "Write test case to verify transaction alerts functionality. Scenario type: negative",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-5855 Feature: Transaction Alerts Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6222,
    "input_text": "Generate negative test scenario for transaction alerts with critical priority. Priority: Critical",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-6222 Feature: Transaction Alerts Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3046,
    "input_text": "User acceptance test for bill payment",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3046 Feature: Bill Payment Priority: Medium Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed Expected Result: • Payment processed with receipt number generated",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4853,
    "input_text": "Write test case to verify account overview functionality. Regression testing",
    "target_text": "Test Case: Verify Account Overview Boundary Conditions Test ID: TC-ACCT-4853 Feature: Account Overview Priority: Low Scenario: Edge Preconditions: • User has maximum allowed accounts Test Steps: Given user accesses account overview feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Performance acceptable with max accounts",
    "feature": "account_overview",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4723,
    "input_text": "BDD scenario for account overview feature. Priority: Medium",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-4723 Feature: Account Overview Priority: Medium Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4083,
    "input_text": "Write test case to verify card management functionality. Priority: Low",
    "target_text": "Test Case: Verify Card Management Boundary Conditions Test ID: TC-CARD-4083 Feature: Card Management Priority: Low Scenario: Edge Preconditions: • Multiple cards with different limits Test Steps: Given user accesses card management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Card limit enforcement verified",
    "feature": "card_management",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5904,
    "input_text": "Create a positive test case for transaction alerts",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-5904 Feature: Transaction Alerts Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6600,
    "input_text": "Create a security test case for beneficiary management. Scenario type: security",
    "target_text": "Test Case: Verify Beneficiary Management Security Controls Test ID: TC-BNFY-6600 Feature: Beneficiary Management Priority: High Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1105,
    "input_text": "Automated test case for login authentication. Priority: Medium",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-1105 Feature: Login Authentication Priority: Medium Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear Expected Result: • Login rejected with clear error message Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4138,
    "input_text": "Automated test case for card management. Regression testing",
    "target_text": "Test Case: Verify Card Management Boundary Conditions Test ID: TC-CARD-4138 Feature: Card Management Priority: Medium Scenario: Edge Preconditions: • Multiple cards with different limits Test Steps: Given user accesses card management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Card limit enforcement verified",
    "feature": "card_management",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4957,
    "input_text": "QA test case for mobile banking account overview. Priority: Medium",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-4957 Feature: Account Overview Priority: Medium Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3256,
    "input_text": "Create a positive test case for bill payment. Priority: Low",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3256 Feature: Bill Payment Priority: Low Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8769,
    "input_text": "User acceptance test for security settings",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-8769 Feature: Security Settings Priority: Low Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8358,
    "input_text": "Automated test case for security settings. Priority: Medium",
    "target_text": "Test Case: Verify Security Settings Security Controls Test ID: TC-SEC-8358 Feature: Security Settings Priority: Medium Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "security_settings",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9672,
    "input_text": "User acceptance test for mobile deposits",
    "target_text": "Test Case: Verify Mobile Deposits Security Controls Test ID: TC-DEP-9672 Feature: Mobile Deposits Priority: Medium Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5026,
    "input_text": "Automated test case for account overview",
    "target_text": "Test Case: Verify Account Overview Security Controls Test ID: TC-ACCT-5026 Feature: Account Overview Priority: Low Scenario: Security Preconditions: • Account access is properly configured Test Steps: Given user accesses account overview feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Audit log created for access Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "account_overview",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4182,
    "input_text": "QA test case for mobile banking card management",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4182 Feature: Card Management Priority: Low Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5958,
    "input_text": "QA test case for mobile banking transaction alerts",
    "target_text": "Test Case: Verify Transaction Alerts Security Controls Test ID: TC-ALRT-5958 Feature: Transaction Alerts Priority: Critical Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "transaction_alerts",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6112,
    "input_text": "User acceptance test for transaction alerts",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-6112 Feature: Transaction Alerts Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6906,
    "input_text": "BDD scenario for beneficiary management feature",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-6906 Feature: Beneficiary Management Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 838,
    "input_text": "User acceptance test for login authentication",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0838 Feature: Login Authentication Priority: Critical Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Expected Result: • Login rejected with clear error message Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1026,
    "input_text": "Automated test case for login authentication",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-1026 Feature: Login Authentication Priority: Low Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Expected Result: • Login successful with dashboard displayed within 2 seconds Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5299,
    "input_text": "User acceptance test for account overview",
    "target_text": "Test Case: Verify Account Overview Boundary Conditions Test ID: TC-ACCT-5299 Feature: Account Overview Priority: Low Scenario: Edge Preconditions: • User has maximum allowed accounts Test Steps: Given user accesses account overview feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Performance acceptable with max accounts",
    "feature": "account_overview",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9526,
    "input_text": "Write test case to verify mobile deposits functionality",
    "target_text": "Test Case: Verify Mobile Deposits Boundary Conditions Test ID: TC-DEP-9526 Feature: Mobile Deposits Priority: Low Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5970,
    "input_text": "QA test case for mobile banking transaction alerts. Regression testing",
    "target_text": "Test Case: Verify Transaction Alerts Security Controls Test ID: TC-ALRT-5970 Feature: Transaction Alerts Priority: Critical Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "transaction_alerts",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1706,
    "input_text": "User acceptance test for fund transfer",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1706 Feature: Fund Transfer Priority: Low Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6945,
    "input_text": "Automated test case for beneficiary management. Scenario type: negative",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-6945 Feature: Beneficiary Management Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8837,
    "input_text": "BDD scenario for security settings feature",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8837 Feature: Security Settings Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9145,
    "input_text": "Create a positive test case for security settings. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-9145 Feature: Security Settings Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3984,
    "input_text": "Automated test case for card management. Regression testing",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-3984 Feature: Card Management Priority: Low Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5650,
    "input_text": "Create a positive test case for account overview",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5650 Feature: Account Overview Priority: High Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4876,
    "input_text": "QA test case for mobile banking account overview",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-4876 Feature: Account Overview Priority: Critical Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7128,
    "input_text": "Generate positive test scenario for beneficiary management with high priority. Regression testing",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-7128 Feature: Beneficiary Management Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7149,
    "input_text": "Automated test case for beneficiary management",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-7149 Feature: Beneficiary Management Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8834,
    "input_text": "User acceptance test for security settings. Mobile banking feature",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8834 Feature: Security Settings Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9498,
    "input_text": "BDD scenario for mobile deposits feature. Priority: Medium",
    "target_text": "Test Case: Verify Mobile Deposits Fails with Invalid Input Test ID: TC-DEP-9498 Feature: Mobile Deposits Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "mobile_deposits",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1626,
    "input_text": "BDD scenario for fund transfer feature",
    "target_text": "Test Case: Verify Fund Transfer Security Controls Test ID: TC-FUND-1626 Feature: Fund Transfer Priority: Medium Scenario: Security Preconditions: • Transaction monitoring is enabled Test Steps: Given user accesses fund transfer feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Transaction flagged for security review Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "fund_transfer",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5247,
    "input_text": "User acceptance test for account overview",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5247 Feature: Account Overview Priority: Critical Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6841,
    "input_text": "User acceptance test for beneficiary management",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-6841 Feature: Beneficiary Management Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6710,
    "input_text": "User acceptance test for beneficiary management",
    "target_text": "Test Case: Verify Beneficiary Management Boundary Conditions Test ID: TC-BNFY-6710 Feature: Beneficiary Management Priority: Critical Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1222,
    "input_text": "Test specification for fund transfer - positive scenario",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1222 Feature: Fund Transfer Priority: Medium Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Then transfer should be processed successfully And confirmation number should be displayed Expected Result: • Transfer completed with confirmation And updated balance Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9233,
    "input_text": "Write test case to verify security settings functionality",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-9233 Feature: Security Settings Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3603,
    "input_text": "Generate positive test scenario for bill payment with medium priority",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3603 Feature: Bill Payment Priority: Medium Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed And receipt should be generated Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5873,
    "input_text": "Write test case to verify transaction alerts functionality",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-5873 Feature: Transaction Alerts Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7114,
    "input_text": "Generate negative test scenario for beneficiary management with medium priority. Priority: Medium",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-7114 Feature: Beneficiary Management Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4420,
    "input_text": "Automated test case for card management",
    "target_text": "Test Case: Verify Card Management Boundary Conditions Test ID: TC-CARD-4420 Feature: Card Management Priority: Medium Scenario: Edge Preconditions: • Multiple cards with different limits Test Steps: Given user accesses card management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Card limit enforcement verified",
    "feature": "card_management",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3557,
    "input_text": "Write test case to verify bill payment functionality",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3557 Feature: Bill Payment Priority: Medium Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 317,
    "input_text": "Generate security test scenario for login authentication with low priority. Scenario type: security",
    "target_text": "Test Case: Verify Login Authentication Security Controls Test ID: TC-AUTH-0317 Feature: Login Authentication Priority: Low Scenario: Security Preconditions: • Security monitoring is active And login attempts are tracked Test Steps: Given user accesses login authentication feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Account locked after failed attempts",
    "feature": "login_authentication",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8227,
    "input_text": "Write test case to verify security settings functionality",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8227 Feature: Security Settings Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1736,
    "input_text": "Test specification for fund transfer - security scenario",
    "target_text": "Test Case: Verify Fund Transfer Security Controls Test ID: TC-FUND-1736 Feature: Fund Transfer Priority: Low Scenario: Security Preconditions: • Transaction monitoring is enabled Test Steps: Given user accesses fund transfer feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Transaction flagged for security review Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "fund_transfer",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9388,
    "input_text": "BDD scenario for mobile deposits feature",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9388 Feature: Mobile Deposits Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3974,
    "input_text": "QA test case for mobile banking card management",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-3974 Feature: Card Management Priority: Critical Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8560,
    "input_text": "User acceptance test for security settings",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8560 Feature: Security Settings Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6356,
    "input_text": "User acceptance test for transaction alerts",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-6356 Feature: Transaction Alerts Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3867,
    "input_text": "Automated test case for card management",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-3867 Feature: Card Management Priority: Low Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7690,
    "input_text": "BDD scenario for profile settings feature. Priority: Low",
    "target_text": "Test Case: Verify Profile Settings Boundary Conditions Test ID: TC-PROF-7690 Feature: Profile Settings Priority: Low Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7419,
    "input_text": "QA test case for mobile banking profile settings",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-7419 Feature: Profile Settings Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5511,
    "input_text": "Test specification for account overview - positive scenario. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5511 Feature: Account Overview Priority: Low Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8653,
    "input_text": "User acceptance test for security settings. Priority: Critical",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-8653 Feature: Security Settings Priority: Critical Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9846,
    "input_text": "Test specification for mobile deposits - edge scenario. Scenario type: edge",
    "target_text": "Test Case: Verify Mobile Deposits Boundary Conditions Test ID: TC-DEP-9846 Feature: Mobile Deposits Priority: Low Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 530,
    "input_text": "BDD scenario for login authentication feature. Scenario type: security",
    "target_text": "Test Case: Verify Login Authentication Security Controls Test ID: TC-AUTH-0530 Feature: Login Authentication Priority: High Scenario: Security Preconditions: • Security monitoring is active And login attempts are tracked Test Steps: Given user accesses login authentication feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Account locked after failed attempts Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "login_authentication",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3241,
    "input_text": "User acceptance test for bill payment",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3241 Feature: Bill Payment Priority: High Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2841,
    "input_text": "Write test case to verify bill payment functionality",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-2841 Feature: Bill Payment Priority: Critical Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9108,
    "input_text": "QA test case for mobile banking security settings. Mobile banking feature",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-9108 Feature: Security Settings Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 226,
    "input_text": "User acceptance test for login authentication. Priority: Low",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0226 Feature: Login Authentication Priority: Low Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6191,
    "input_text": "Test specification for transaction alerts - negative scenario",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-6191 Feature: Transaction Alerts Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3127,
    "input_text": "Write test case to verify bill payment functionality",
    "target_text": "Test Case: Verify Bill Payment Boundary Conditions Test ID: TC-BILL-3127 Feature: Bill Payment Priority: Low Scenario: Edge Preconditions: • Bill amount equals account balance Test Steps: Given user accesses bill payment feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Payment handles maximum amount",
    "feature": "bill_payment",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 324,
    "input_text": "BDD scenario for login authentication feature",
    "target_text": "Test Case: Verify Login Authentication Security Controls Test ID: TC-AUTH-0324 Feature: Login Authentication Priority: Medium Scenario: Security Preconditions: • Security monitoring is active And login attempts are tracked Test Steps: Given user accesses login authentication feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Account locked after failed attempts Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "login_authentication",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9733,
    "input_text": "BDD scenario for mobile deposits feature",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9733 Feature: Mobile Deposits Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4579,
    "input_text": "Create a positive test case for card management",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-4579 Feature: Card Management Priority: Medium Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3346,
    "input_text": "Create a positive test case for bill payment. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3346 Feature: Bill Payment Priority: Critical Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed Expected Result: • Payment processed with receipt number generated",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2327,
    "input_text": "Write test case to verify fund transfer functionality. Priority: High",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-2327 Feature: Fund Transfer Priority: High Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Expected Result: • Transfer completed with confirmation And updated balance Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1663,
    "input_text": "Test specification for fund transfer - positive scenario",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1663 Feature: Fund Transfer Priority: Critical Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Then transfer should be processed successfully And confirmation number should be displayed Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5346,
    "input_text": "Generate positive test scenario for account overview with low priority",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5346 Feature: Account Overview Priority: Low Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 557,
    "input_text": "Create a positive test case for login authentication. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0557 Feature: Login Authentication Priority: High Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard And user profile should be displayed Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4855,
    "input_text": "QA test case for mobile banking account overview. Regression testing",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-4855 Feature: Account Overview Priority: High Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4714,
    "input_text": "Automated test case for account overview",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-4714 Feature: Account Overview Priority: Low Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9001,
    "input_text": "Write test case to verify security settings functionality. Priority: Critical",
    "target_text": "Test Case: Verify Security Settings Security Controls Test ID: TC-SEC-9001 Feature: Security Settings Priority: Critical Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6071,
    "input_text": "QA test case for mobile banking transaction alerts",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-6071 Feature: Transaction Alerts Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 469,
    "input_text": "Automated test case for login authentication",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0469 Feature: Login Authentication Priority: Medium Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Expected Result: • Login rejected with clear error message",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8450,
    "input_text": "BDD scenario for security settings feature. Priority: Medium",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8450 Feature: Security Settings Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5534,
    "input_text": "Write test case to verify account overview functionality",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5534 Feature: Account Overview Priority: Critical Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8056,
    "input_text": "User acceptance test for profile settings. Priority: Medium",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-8056 Feature: Profile Settings Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 511,
    "input_text": "BDD scenario for login authentication feature",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0511 Feature: Login Authentication Priority: Medium Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear Expected Result: • Login rejected with clear error message",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6998,
    "input_text": "Write test case to verify beneficiary management functionality. Mobile banking feature",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-6998 Feature: Beneficiary Management Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2733,
    "input_text": "Create a positive test case for bill payment. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-2733 Feature: Bill Payment Priority: High Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Expected Result: • Payment processed with receipt number generated",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8061,
    "input_text": "Generate edge test scenario for profile settings with critical priority",
    "target_text": "Test Case: Verify Profile Settings Boundary Conditions Test ID: TC-PROF-8061 Feature: Profile Settings Priority: Critical Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8333,
    "input_text": "Generate positive test scenario for security settings with critical priority",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8333 Feature: Security Settings Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9550,
    "input_text": "QA test case for mobile banking mobile deposits",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9550 Feature: Mobile Deposits Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9899,
    "input_text": "Write test case to verify mobile deposits functionality. Priority: Medium",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9899 Feature: Mobile Deposits Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9214,
    "input_text": "Automated test case for security settings. Mobile banking feature",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-9214 Feature: Security Settings Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4369,
    "input_text": "Generate negative test scenario for card management with low priority",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4369 Feature: Card Management Priority: Low Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5343,
    "input_text": "Test specification for account overview - negative scenario",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5343 Feature: Account Overview Priority: High Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9589,
    "input_text": "Write test case to verify mobile deposits functionality",
    "target_text": "Test Case: Verify Mobile Deposits Fails with Invalid Input Test ID: TC-DEP-9589 Feature: Mobile Deposits Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "mobile_deposits",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4140,
    "input_text": "Generate positive test scenario for card management with critical priority",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-4140 Feature: Card Management Priority: Critical Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 579,
    "input_text": "Create a positive test case for login authentication. Priority: Low",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0579 Feature: Login Authentication Priority: Low Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9683,
    "input_text": "Test specification for mobile deposits - negative scenario. Priority: Medium",
    "target_text": "Test Case: Verify Mobile Deposits Fails with Invalid Input Test ID: TC-DEP-9683 Feature: Mobile Deposits Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "mobile_deposits",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6188,
    "input_text": "Generate security test scenario for transaction alerts with critical priority",
    "target_text": "Test Case: Verify Transaction Alerts Security Controls Test ID: TC-ALRT-6188 Feature: Transaction Alerts Priority: Critical Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "transaction_alerts",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8547,
    "input_text": "Create a positive test case for security settings",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8547 Feature: Security Settings Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7529,
    "input_text": "Test specification for profile settings - positive scenario",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7529 Feature: Profile Settings Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7985,
    "input_text": "User acceptance test for profile settings",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-7985 Feature: Profile Settings Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 321,
    "input_text": "Test specification for login authentication - negative scenario",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0321 Feature: Login Authentication Priority: Critical Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Expected Result: • Login rejected with clear error message Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2956,
    "input_text": "Create a security test case for bill payment",
    "target_text": "Test Case: Verify Bill Payment Security Controls Test ID: TC-BILL-2956 Feature: Bill Payment Priority: High Scenario: Security Preconditions: • Payment gateway security is configured Test Steps: Given user accesses bill payment feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Payment requires additional authentication",
    "feature": "bill_payment",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3471,
    "input_text": "BDD scenario for bill payment feature",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3471 Feature: Bill Payment Priority: Medium Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed Expected Result: • Payment processed with receipt number generated",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8098,
    "input_text": "Write test case to verify profile settings functionality",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-8098 Feature: Profile Settings Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8007,
    "input_text": "BDD scenario for profile settings feature",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-8007 Feature: Profile Settings Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5671,
    "input_text": "Write test case to verify account overview functionality. Scenario type: negative",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5671 Feature: Account Overview Priority: High Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9462,
    "input_text": "Test specification for mobile deposits - edge scenario. Priority: Medium",
    "target_text": "Test Case: Verify Mobile Deposits Boundary Conditions Test ID: TC-DEP-9462 Feature: Mobile Deposits Priority: Medium Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7664,
    "input_text": "BDD scenario for profile settings feature",
    "target_text": "Test Case: Verify Profile Settings Security Controls Test ID: TC-PROF-7664 Feature: Profile Settings Priority: High Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4592,
    "input_text": "BDD scenario for card management feature",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4592 Feature: Card Management Priority: Medium Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2748,
    "input_text": "Test specification for bill payment - negative scenario. Mobile banking feature",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-2748 Feature: Bill Payment Priority: Critical Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4736,
    "input_text": "User acceptance test for account overview. Regression testing",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-4736 Feature: Account Overview Priority: Medium Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7896,
    "input_text": "BDD scenario for profile settings feature",
    "target_text": "Test Case: Verify Profile Settings Security Controls Test ID: TC-PROF-7896 Feature: Profile Settings Priority: High Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1859,
    "input_text": "User acceptance test for fund transfer",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1859 Feature: Fund Transfer Priority: Critical Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked And balance should remain unchanged Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5538,
    "input_text": "Create a negative test case for account overview",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5538 Feature: Account Overview Priority: High Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2696,
    "input_text": "Write test case to verify fund transfer functionality",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-2696 Feature: Fund Transfer Priority: High Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 685,
    "input_text": "BDD scenario for login authentication feature",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0685 Feature: Login Authentication Priority: Low Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8752,
    "input_text": "User acceptance test for security settings",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8752 Feature: Security Settings Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 82,
    "input_text": "QA test case for mobile banking login authentication",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0082 Feature: Login Authentication Priority: Critical Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Expected Result: • Login rejected with clear error message",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4945,
    "input_text": "Automated test case for account overview. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-4945 Feature: Account Overview Priority: Low Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1864,
    "input_text": "BDD scenario for fund transfer feature",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1864 Feature: Fund Transfer Priority: Medium Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8164,
    "input_text": "User acceptance test for security settings. Scenario type: negative",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8164 Feature: Security Settings Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2559,
    "input_text": "Automated test case for fund transfer. Regression testing",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-2559 Feature: Fund Transfer Priority: Medium Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Then transfer should be processed successfully Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3208,
    "input_text": "Automated test case for bill payment",
    "target_text": "Test Case: Verify Bill Payment Boundary Conditions Test ID: TC-BILL-3208 Feature: Bill Payment Priority: Low Scenario: Edge Preconditions: • Bill amount equals account balance Test Steps: Given user accesses bill payment feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Payment handles maximum amount",
    "feature": "bill_payment",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2532,
    "input_text": "BDD scenario for fund transfer feature",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-2532 Feature: Fund Transfer Priority: Medium Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked And balance should remain unchanged Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9930,
    "input_text": "QA test case for mobile banking mobile deposits. Priority: Medium",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9930 Feature: Mobile Deposits Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6832,
    "input_text": "BDD scenario for beneficiary management feature",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-6832 Feature: Beneficiary Management Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8545,
    "input_text": "QA test case for mobile banking security settings. Mobile banking feature",
    "target_text": "Test Case: Verify Security Settings Security Controls Test ID: TC-SEC-8545 Feature: Security Settings Priority: Critical Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "security_settings",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6318,
    "input_text": "Create a edge test case for transaction alerts",
    "target_text": "Test Case: Verify Transaction Alerts Boundary Conditions Test ID: TC-ALRT-6318 Feature: Transaction Alerts Priority: Low Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9312,
    "input_text": "BDD scenario for mobile deposits feature",
    "target_text": "Test Case: Verify Mobile Deposits Security Controls Test ID: TC-DEP-9312 Feature: Mobile Deposits Priority: High Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8534,
    "input_text": "User acceptance test for security settings",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8534 Feature: Security Settings Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6087,
    "input_text": "Generate security test scenario for transaction alerts with critical priority",
    "target_text": "Test Case: Verify Transaction Alerts Security Controls Test ID: TC-ALRT-6087 Feature: Transaction Alerts Priority: Critical Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8024,
    "input_text": "BDD scenario for profile settings feature. Regression testing",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-8024 Feature: Profile Settings Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7010,
    "input_text": "Test specification for beneficiary management - positive scenario. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-7010 Feature: Beneficiary Management Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1804,
    "input_text": "Write test case to verify fund transfer functionality",
    "target_text": "Test Case: Verify Fund Transfer Security Controls Test ID: TC-FUND-1804 Feature: Fund Transfer Priority: Medium Scenario: Security Preconditions: • Transaction monitoring is enabled Test Steps: Given user accesses fund transfer feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Transaction flagged for security review Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "fund_transfer",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5587,
    "input_text": "Generate negative test scenario for account overview with critical priority",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5587 Feature: Account Overview Priority: Critical Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1090,
    "input_text": "Generate positive test scenario for login authentication with critical priority. Priority: Critical",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-1090 Feature: Login Authentication Priority: Critical Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard And user profile should be displayed Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8154,
    "input_text": "Test specification for security settings - edge scenario. Scenario type: edge",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-8154 Feature: Security Settings Priority: Critical Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1841,
    "input_text": "Write test case to verify fund transfer functionality",
    "target_text": "Test Case: Verify Fund Transfer Security Controls Test ID: TC-FUND-1841 Feature: Fund Transfer Priority: Medium Scenario: Security Preconditions: • Transaction monitoring is enabled Test Steps: Given user accesses fund transfer feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Transaction flagged for security review Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "fund_transfer",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 621,
    "input_text": "BDD scenario for login authentication feature",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0621 Feature: Login Authentication Priority: Medium Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear And user should remain on login screen Expected Result: • Login rejected with clear error message",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9066,
    "input_text": "QA test case for mobile banking security settings. Priority: High",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-9066 Feature: Security Settings Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3744,
    "input_text": "Automated test case for card management",
    "target_text": "Test Case: Verify Card Management Boundary Conditions Test ID: TC-CARD-3744 Feature: Card Management Priority: Critical Scenario: Edge Preconditions: • Multiple cards with different limits Test Steps: Given user accesses card management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Card limit enforcement verified",
    "feature": "card_management",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3134,
    "input_text": "Create a negative test case for bill payment",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3134 Feature: Bill Payment Priority: High Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 173,
    "input_text": "User acceptance test for login authentication. Priority: Medium",
    "target_text": "Test Case: Verify Login Authentication Boundary Conditions Test ID: TC-AUTH-0173 Feature: Login Authentication Priority: Medium Scenario: Edge Preconditions: • Multiple login sessions are configured Test Steps: Given user accesses login authentication feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • System handles concurrent login attempts",
    "feature": "login_authentication",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2852,
    "input_text": "Automated test case for bill payment",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-2852 Feature: Bill Payment Priority: Medium Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8735,
    "input_text": "Generate negative test scenario for security settings with high priority",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8735 Feature: Security Settings Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3600,
    "input_text": "Write test case to verify bill payment functionality. Scenario type: negative",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3600 Feature: Bill Payment Priority: High Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4710,
    "input_text": "BDD scenario for account overview feature",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-4710 Feature: Account Overview Priority: Critical Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4595,
    "input_text": "Automated test case for card management. Mobile banking feature",
    "target_text": "Test Case: Verify Card Management Boundary Conditions Test ID: TC-CARD-4595 Feature: Card Management Priority: Medium Scenario: Edge Preconditions: • Multiple cards with different limits Test Steps: Given user accesses card management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Card limit enforcement verified",
    "feature": "card_management",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2797,
    "input_text": "Generate negative test scenario for bill payment with critical priority",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-2797 Feature: Bill Payment Priority: Critical Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8309,
    "input_text": "User acceptance test for security settings",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8309 Feature: Security Settings Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4342,
    "input_text": "Create a edge test case for card management",
    "target_text": "Test Case: Verify Card Management Boundary Conditions Test ID: TC-CARD-4342 Feature: Card Management Priority: Medium Scenario: Edge Preconditions: • Multiple cards with different limits Test Steps: Given user accesses card management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Card limit enforcement verified",
    "feature": "card_management",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1976,
    "input_text": "Create a positive test case for fund transfer. Priority: Critical",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1976 Feature: Fund Transfer Priority: Critical Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1293,
    "input_text": "Automated test case for fund transfer. Priority: Low",
    "target_text": "Test Case: Verify Fund Transfer Boundary Conditions Test ID: TC-FUND-1293 Feature: Fund Transfer Priority: Low Scenario: Edge Preconditions: • User has exactly minimum balance required Test Steps: Given user accesses fund transfer feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Transfer processes at exact limit",
    "feature": "fund_transfer",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2758,
    "input_text": "Automated test case for bill payment",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-2758 Feature: Bill Payment Priority: Low Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5584,
    "input_text": "User acceptance test for account overview. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5584 Feature: Account Overview Priority: High Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8055,
    "input_text": "Generate positive test scenario for profile settings with critical priority",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-8055 Feature: Profile Settings Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 666,
    "input_text": "Automated test case for login authentication",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0666 Feature: Login Authentication Priority: Medium Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9935,
    "input_text": "Automated test case for mobile deposits",
    "target_text": "Test Case: Verify Mobile Deposits Fails with Invalid Input Test ID: TC-DEP-9935 Feature: Mobile Deposits Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "mobile_deposits",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3619,
    "input_text": "Test specification for bill payment - negative scenario. Regression testing",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3619 Feature: Bill Payment Priority: Critical Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8840,
    "input_text": "Write test case to verify security settings functionality",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-8840 Feature: Security Settings Priority: Medium Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5356,
    "input_text": "User acceptance test for account overview. Priority: High",
    "target_text": "Test Case: Verify Account Overview Boundary Conditions Test ID: TC-ACCT-5356 Feature: Account Overview Priority: High Scenario: Edge Preconditions: • User has maximum allowed accounts Test Steps: Given user accesses account overview feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Performance acceptable with max accounts",
    "feature": "account_overview",
    "scenario_type": "edge",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5471,
    "input_text": "Create a edge test case for account overview",
    "target_text": "Test Case: Verify Account Overview Boundary Conditions Test ID: TC-ACCT-5471 Feature: Account Overview Priority: Low Scenario: Edge Preconditions: • User has maximum allowed accounts Test Steps: Given user accesses account overview feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Performance acceptable with max accounts",
    "feature": "account_overview",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2292,
    "input_text": "BDD scenario for fund transfer feature",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-2292 Feature: Fund Transfer Priority: Medium Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5175,
    "input_text": "Test specification for account overview - positive scenario. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5175 Feature: Account Overview Priority: Low Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6732,
    "input_text": "Create a negative test case for beneficiary management. Priority: High",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-6732 Feature: Beneficiary Management Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2105,
    "input_text": "Automated test case for fund transfer",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-2105 Feature: Fund Transfer Priority: High Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 Expected Result: • Transfer completed with confirmation And updated balance Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4842,
    "input_text": "User acceptance test for account overview. Mobile banking feature",
    "target_text": "Test Case: Verify Account Overview Boundary Conditions Test ID: TC-ACCT-4842 Feature: Account Overview Priority: Critical Scenario: Edge Preconditions: • User has maximum allowed accounts Test Steps: Given user accesses account overview feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Performance acceptable with max accounts",
    "feature": "account_overview",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4490,
    "input_text": "Create a positive test case for card management. Regression testing",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-4490 Feature: Card Management Priority: Medium Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 745,
    "input_text": "Test specification for login authentication - negative scenario",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0745 Feature: Login Authentication Priority: Medium Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Expected Result: • Login rejected with clear error message",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4485,
    "input_text": "BDD scenario for card management feature",
    "target_text": "Test Case: Verify Card Management Boundary Conditions Test ID: TC-CARD-4485 Feature: Card Management Priority: Medium Scenario: Edge Preconditions: • Multiple cards with different limits Test Steps: Given user accesses card management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Card limit enforcement verified",
    "feature": "card_management",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1654,
    "input_text": "BDD scenario for fund transfer feature",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1654 Feature: Fund Transfer Priority: High Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Then transfer should be processed successfully And confirmation number should be displayed Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1783,
    "input_text": "Automated test case for fund transfer. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1783 Feature: Fund Transfer Priority: Critical Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4823,
    "input_text": "Automated test case for account overview",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-4823 Feature: Account Overview Priority: High Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1919,
    "input_text": "Write test case to verify fund transfer functionality",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1919 Feature: Fund Transfer Priority: Critical Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Then transfer should be processed successfully And confirmation number should be displayed Expected Result: • Transfer completed with confirmation And updated balance Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7446,
    "input_text": "Test specification for profile settings - security scenario",
    "target_text": "Test Case: Verify Profile Settings Security Controls Test ID: TC-PROF-7446 Feature: Profile Settings Priority: Critical Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6432,
    "input_text": "Write test case to verify transaction alerts functionality. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-6432 Feature: Transaction Alerts Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3192,
    "input_text": "Create a edge test case for bill payment",
    "target_text": "Test Case: Verify Bill Payment Boundary Conditions Test ID: TC-BILL-3192 Feature: Bill Payment Priority: Critical Scenario: Edge Preconditions: • Bill amount equals account balance Test Steps: Given user accesses bill payment feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Payment handles maximum amount",
    "feature": "bill_payment",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2040,
    "input_text": "Generate negative test scenario for fund transfer with medium priority",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-2040 Feature: Fund Transfer Priority: Medium Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5656,
    "input_text": "User acceptance test for account overview",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5656 Feature: Account Overview Priority: Low Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2010,
    "input_text": "Create a positive test case for fund transfer. Priority: Low",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-2010 Feature: Fund Transfer Priority: Low Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Expected Result: • Transfer completed with confirmation And updated balance Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5483,
    "input_text": "Write test case to verify account overview functionality",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5483 Feature: Account Overview Priority: Medium Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9423,
    "input_text": "Create a positive test case for mobile deposits. Regression testing",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9423 Feature: Mobile Deposits Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9332,
    "input_text": "Create a edge test case for mobile deposits. Priority: High",
    "target_text": "Test Case: Verify Mobile Deposits Boundary Conditions Test ID: TC-DEP-9332 Feature: Mobile Deposits Priority: High Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "edge",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2342,
    "input_text": "User acceptance test for fund transfer",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-2342 Feature: Fund Transfer Priority: Critical Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 585,
    "input_text": "Write test case to verify login authentication functionality. Scenario type: negative",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0585 Feature: Login Authentication Priority: Medium Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear And user should remain on login screen Expected Result: • Login rejected with clear error message Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1602,
    "input_text": "Generate negative test scenario for fund transfer with low priority",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1602 Feature: Fund Transfer Priority: Low Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked And balance should remain unchanged Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5615,
    "input_text": "Test specification for account overview - positive scenario. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5615 Feature: Account Overview Priority: Medium Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6190,
    "input_text": "BDD scenario for transaction alerts feature",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-6190 Feature: Transaction Alerts Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7798,
    "input_text": "Write test case to verify profile settings functionality",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7798 Feature: Profile Settings Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6760,
    "input_text": "Generate positive test scenario for beneficiary management with medium priority. Regression testing",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-6760 Feature: Beneficiary Management Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6304,
    "input_text": "Test specification for transaction alerts - negative scenario",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-6304 Feature: Transaction Alerts Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7528,
    "input_text": "User acceptance test for profile settings",
    "target_text": "Test Case: Verify Profile Settings Security Controls Test ID: TC-PROF-7528 Feature: Profile Settings Priority: Low Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "profile_settings",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6168,
    "input_text": "Test specification for transaction alerts - positive scenario. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-6168 Feature: Transaction Alerts Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8128,
    "input_text": "Generate negative test scenario for security settings with low priority",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8128 Feature: Security Settings Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8665,
    "input_text": "QA test case for mobile banking security settings",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8665 Feature: Security Settings Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3871,
    "input_text": "Test specification for card management - negative scenario",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-3871 Feature: Card Management Priority: High Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5264,
    "input_text": "User acceptance test for account overview. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5264 Feature: Account Overview Priority: Critical Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1823,
    "input_text": "BDD scenario for fund transfer feature",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1823 Feature: Fund Transfer Priority: Critical Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked And balance should remain unchanged Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6217,
    "input_text": "BDD scenario for transaction alerts feature",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-6217 Feature: Transaction Alerts Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9731,
    "input_text": "QA test case for mobile banking mobile deposits. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9731 Feature: Mobile Deposits Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8946,
    "input_text": "Create a positive test case for security settings",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8946 Feature: Security Settings Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4324,
    "input_text": "Write test case to verify card management functionality",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4324 Feature: Card Management Priority: Medium Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9953,
    "input_text": "Write test case to verify mobile deposits functionality",
    "target_text": "Test Case: Verify Mobile Deposits Fails with Invalid Input Test ID: TC-DEP-9953 Feature: Mobile Deposits Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1429,
    "input_text": "Generate security test scenario for fund transfer with high priority. Mobile banking feature",
    "target_text": "Test Case: Verify Fund Transfer Security Controls Test ID: TC-FUND-1429 Feature: Fund Transfer Priority: High Scenario: Security Preconditions: • Transaction monitoring is enabled Test Steps: Given user accesses fund transfer feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Transaction flagged for security review",
    "feature": "fund_transfer",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 690,
    "input_text": "Write test case to verify login authentication functionality",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0690 Feature: Login Authentication Priority: Critical Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5113,
    "input_text": "QA test case for mobile banking account overview",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5113 Feature: Account Overview Priority: High Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5144,
    "input_text": "Generate positive test scenario for account overview with high priority",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5144 Feature: Account Overview Priority: High Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8886,
    "input_text": "User acceptance test for security settings",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-8886 Feature: Security Settings Priority: High Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1728,
    "input_text": "Write test case to verify fund transfer functionality",
    "target_text": "Test Case: Verify Fund Transfer Security Controls Test ID: TC-FUND-1728 Feature: Fund Transfer Priority: High Scenario: Security Preconditions: • Transaction monitoring is enabled Test Steps: Given user accesses fund transfer feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Transaction flagged for security review",
    "feature": "fund_transfer",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1669,
    "input_text": "Generate positive test scenario for fund transfer with high priority",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1669 Feature: Fund Transfer Priority: High Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Then transfer should be processed successfully And confirmation number should be displayed Expected Result: • Transfer completed with confirmation And updated balance Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6619,
    "input_text": "BDD scenario for beneficiary management feature",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-6619 Feature: Beneficiary Management Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3156,
    "input_text": "Test specification for bill payment - negative scenario",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3156 Feature: Bill Payment Priority: Medium Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5423,
    "input_text": "Automated test case for account overview. Scenario type: negative",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5423 Feature: Account Overview Priority: Medium Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1079,
    "input_text": "User acceptance test for login authentication. Mobile banking feature",
    "target_text": "Test Case: Verify Login Authentication Boundary Conditions Test ID: TC-AUTH-1079 Feature: Login Authentication Priority: Low Scenario: Edge Preconditions: • Multiple login sessions are configured Test Steps: Given user accesses login authentication feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • System handles concurrent login attempts",
    "feature": "login_authentication",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2272,
    "input_text": "Automated test case for fund transfer. Scenario type: edge",
    "target_text": "Test Case: Verify Fund Transfer Boundary Conditions Test ID: TC-FUND-2272 Feature: Fund Transfer Priority: Low Scenario: Edge Preconditions: • User has exactly minimum balance required Test Steps: Given user accesses fund transfer feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Transfer processes at exact limit",
    "feature": "fund_transfer",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7822,
    "input_text": "Write test case to verify profile settings functionality",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7822 Feature: Profile Settings Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8269,
    "input_text": "User acceptance test for security settings. Priority: High",
    "target_text": "Test Case: Verify Security Settings Security Controls Test ID: TC-SEC-8269 Feature: Security Settings Priority: High Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "security_settings",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8142,
    "input_text": "QA test case for mobile banking security settings. Priority: Low",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8142 Feature: Security Settings Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1827,
    "input_text": "Generate edge test scenario for fund transfer with low priority. Mobile banking feature",
    "target_text": "Test Case: Verify Fund Transfer Boundary Conditions Test ID: TC-FUND-1827 Feature: Fund Transfer Priority: Low Scenario: Edge Preconditions: • User has exactly minimum balance required Test Steps: Given user accesses fund transfer feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Transfer processes at exact limit",
    "feature": "fund_transfer",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7190,
    "input_text": "BDD scenario for beneficiary management feature",
    "target_text": "Test Case: Verify Beneficiary Management Boundary Conditions Test ID: TC-BNFY-7190 Feature: Beneficiary Management Priority: Critical Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3479,
    "input_text": "QA test case for mobile banking bill payment",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3479 Feature: Bill Payment Priority: High Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Expected Result: • Payment processed with receipt number generated",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6082,
    "input_text": "User acceptance test for transaction alerts",
    "target_text": "Test Case: Verify Transaction Alerts Security Controls Test ID: TC-ALRT-6082 Feature: Transaction Alerts Priority: High Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "transaction_alerts",
    "scenario_type": "security",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8594,
    "input_text": "Generate positive test scenario for security settings with low priority",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8594 Feature: Security Settings Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5960,
    "input_text": "Generate negative test scenario for transaction alerts with low priority",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-5960 Feature: Transaction Alerts Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8156,
    "input_text": "User acceptance test for security settings. Priority: Critical",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8156 Feature: Security Settings Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8976,
    "input_text": "BDD scenario for security settings feature. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8976 Feature: Security Settings Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2112,
    "input_text": "Test specification for fund transfer - edge scenario",
    "target_text": "Test Case: Verify Fund Transfer Boundary Conditions Test ID: TC-FUND-2112 Feature: Fund Transfer Priority: Medium Scenario: Edge Preconditions: • User has exactly minimum balance required Test Steps: Given user accesses fund transfer feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Transfer processes at exact limit",
    "feature": "fund_transfer",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7621,
    "input_text": "Generate negative test scenario for profile settings with low priority. Mobile banking feature",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-7621 Feature: Profile Settings Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3518,
    "input_text": "Write test case to verify bill payment functionality",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3518 Feature: Bill Payment Priority: High Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3141,
    "input_text": "Create a negative test case for bill payment",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3141 Feature: Bill Payment Priority: Low Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7612,
    "input_text": "User acceptance test for profile settings. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7612 Feature: Profile Settings Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8991,
    "input_text": "Test specification for security settings - edge scenario",
    "target_text": "Test Case: Verify Security Settings Boundary Conditions Test ID: TC-SEC-8991 Feature: Security Settings Priority: Critical Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1518,
    "input_text": "QA test case for mobile banking fund transfer",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1518 Feature: Fund Transfer Priority: High Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Then transfer should be processed successfully Expected Result: • Transfer completed with confirmation And updated balance Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6897,
    "input_text": "Generate edge test scenario for beneficiary management with high priority",
    "target_text": "Test Case: Verify Beneficiary Management Boundary Conditions Test ID: TC-BNFY-6897 Feature: Beneficiary Management Priority: High Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "edge",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3577,
    "input_text": "Write test case to verify bill payment functionality",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3577 Feature: Bill Payment Priority: Critical Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed And receipt should be generated Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8363,
    "input_text": "Test specification for security settings - negative scenario. Scenario type: negative",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8363 Feature: Security Settings Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8451,
    "input_text": "Write test case to verify security settings functionality",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8451 Feature: Security Settings Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2003,
    "input_text": "Generate positive test scenario for fund transfer with medium priority. Regression testing",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-2003 Feature: Fund Transfer Priority: Medium Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Expected Result: • Transfer completed with confirmation And updated balance Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3237,
    "input_text": "Write test case to verify bill payment functionality",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3237 Feature: Bill Payment Priority: Medium Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8987,
    "input_text": "Write test case to verify security settings functionality",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8987 Feature: Security Settings Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2749,
    "input_text": "Test specification for bill payment - positive scenario",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-2749 Feature: Bill Payment Priority: High Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Then payment should be processed Expected Result: • Payment processed with receipt number generated",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5832,
    "input_text": "Test specification for transaction alerts - negative scenario",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-5832 Feature: Transaction Alerts Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4966,
    "input_text": "BDD scenario for account overview feature. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-4966 Feature: Account Overview Priority: Low Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 129,
    "input_text": "User acceptance test for login authentication",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0129 Feature: Login Authentication Priority: Low Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear And user should remain on login screen Expected Result: • Login rejected with clear error message",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2287,
    "input_text": "User acceptance test for fund transfer. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-2287 Feature: Fund Transfer Priority: High Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7023,
    "input_text": "Automated test case for beneficiary management",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-7023 Feature: Beneficiary Management Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1988,
    "input_text": "Automated test case for fund transfer",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1988 Feature: Fund Transfer Priority: Low Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8984,
    "input_text": "Generate negative test scenario for security settings with critical priority. Scenario type: negative",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8984 Feature: Security Settings Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7021,
    "input_text": "Automated test case for beneficiary management",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-7021 Feature: Beneficiary Management Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9791,
    "input_text": "BDD scenario for mobile deposits feature",
    "target_text": "Test Case: Verify Mobile Deposits Boundary Conditions Test ID: TC-DEP-9791 Feature: Mobile Deposits Priority: Critical Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "mobile_deposits",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7200,
    "input_text": "Create a negative test case for beneficiary management",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-7200 Feature: Beneficiary Management Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6529,
    "input_text": "QA test case for mobile banking beneficiary management",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-6529 Feature: Beneficiary Management Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1825,
    "input_text": "BDD scenario for fund transfer feature",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1825 Feature: Fund Transfer Priority: High Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 Expected Result: • Transfer completed with confirmation And updated balance Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8951,
    "input_text": "User acceptance test for security settings. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8951 Feature: Security Settings Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7557,
    "input_text": "Automated test case for profile settings",
    "target_text": "Test Case: Verify Profile Settings Fails with Invalid Input Test ID: TC-PROF-7557 Feature: Profile Settings Priority: Medium Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8953,
    "input_text": "Automated test case for security settings. Priority: High",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8953 Feature: Security Settings Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5133,
    "input_text": "Generate security test scenario for account overview with medium priority",
    "target_text": "Test Case: Verify Account Overview Security Controls Test ID: TC-ACCT-5133 Feature: Account Overview Priority: Medium Scenario: Security Preconditions: • Account access is properly configured Test Steps: Given user accesses account overview feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Audit log created for access",
    "feature": "account_overview",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5546,
    "input_text": "Automated test case for account overview",
    "target_text": "Test Case: Verify Account Overview Security Controls Test ID: TC-ACCT-5546 Feature: Account Overview Priority: Low Scenario: Security Preconditions: • Account access is properly configured Test Steps: Given user accesses account overview feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Audit log created for access Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "account_overview",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5480,
    "input_text": "User acceptance test for account overview",
    "target_text": "Test Case: Verify Account Overview Fails with Invalid Input Test ID: TC-ACCT-5480 Feature: Account Overview Priority: Low Scenario: Negative Preconditions: • User has no linked accounts Test Steps: Given user accesses account overview feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Error message for unavailable accounts",
    "feature": "account_overview",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2420,
    "input_text": "Automated test case for fund transfer. Priority: Critical",
    "target_text": "Test Case: Verify Fund Transfer Security Controls Test ID: TC-FUND-2420 Feature: Fund Transfer Priority: Critical Scenario: Security Preconditions: • Transaction monitoring is enabled Test Steps: Given user accesses fund transfer feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Transaction flagged for security review",
    "feature": "fund_transfer",
    "scenario_type": "security",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4002,
    "input_text": "QA test case for mobile banking card management. Regression testing",
    "target_text": "Test Case: Verify Card Management Boundary Conditions Test ID: TC-CARD-4002 Feature: Card Management Priority: Critical Scenario: Edge Preconditions: • Multiple cards with different limits Test Steps: Given user accesses card management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Card limit enforcement verified",
    "feature": "card_management",
    "scenario_type": "edge",
    "priority": "Critical",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 551,
    "input_text": "Automated test case for login authentication. Priority: High",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0551 Feature: Login Authentication Priority: High Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard And user profile should be displayed Expected Result: • Login successful with dashboard displayed within 2 seconds Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1984,
    "input_text": "BDD scenario for fund transfer feature",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1984 Feature: Fund Transfer Priority: Critical Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear Expected Result: • Transfer blocked with insufficient funds error",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3231,
    "input_text": "Generate edge test scenario for bill payment with medium priority. Mobile banking feature",
    "target_text": "Test Case: Verify Bill Payment Boundary Conditions Test ID: TC-BILL-3231 Feature: Bill Payment Priority: Medium Scenario: Edge Preconditions: • Bill amount equals account balance Test Steps: Given user accesses bill payment feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Payment handles maximum amount",
    "feature": "bill_payment",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9317,
    "input_text": "BDD scenario for mobile deposits feature",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9317 Feature: Mobile Deposits Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1457,
    "input_text": "BDD scenario for fund transfer feature. Priority: Low",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1457 Feature: Fund Transfer Priority: Low Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 And user confirms the transfer with PIN Then transfer should be processed successfully Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6857,
    "input_text": "Automated test case for beneficiary management",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-6857 Feature: Beneficiary Management Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6650,
    "input_text": "Automated test case for beneficiary management",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-6650 Feature: Beneficiary Management Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1161,
    "input_text": "Generate edge test scenario for login authentication with low priority",
    "target_text": "Test Case: Verify Login Authentication Boundary Conditions Test ID: TC-AUTH-1161 Feature: Login Authentication Priority: Low Scenario: Edge Preconditions: • Multiple login sessions are configured Test Steps: Given user accesses login authentication feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • System handles concurrent login attempts",
    "feature": "login_authentication",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7646,
    "input_text": "Generate positive test scenario for profile settings with medium priority. Regression testing",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7646 Feature: Profile Settings Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 186,
    "input_text": "Generate negative test scenario for login authentication with low priority",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0186 Feature: Login Authentication Priority: Low Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear And user should remain on login screen Expected Result: • Login rejected with clear error message Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1394,
    "input_text": "Generate negative test scenario for fund transfer with medium priority",
    "target_text": "Test Case: Verify Fund Transfer Fails with Invalid Input Test ID: TC-FUND-1394 Feature: Fund Transfer Priority: Medium Scenario: Negative Preconditions: • User is logged in with insufficient balance Test Steps: Given user is on Fund Transfer page And user has balance of $50 When user attempts to transfer $100 Then error message 'Insufficient funds' should appear And transfer should be blocked Expected Result: • Transfer blocked with insufficient funds error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "fund_transfer",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6685,
    "input_text": "User acceptance test for beneficiary management. Priority: Critical",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-6685 Feature: Beneficiary Management Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 572,
    "input_text": "Automated test case for login authentication",
    "target_text": "Test Case: Verify Successful Login Authentication Test ID: TC-AUTH-0572 Feature: Login Authentication Priority: Low Scenario: Positive Preconditions: • User has valid account credentials And app is installed Test Steps: Given user launches the mobile banking app When user enters valid username 'testuser@bank.com' And user enters valid password And user taps on 'Login' button Then user should be redirected to dashboard And user profile should be displayed Expected Result: • Login successful with dashboard displayed within 2 seconds",
    "feature": "login_authentication",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7628,
    "input_text": "Create a positive test case for profile settings. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7628 Feature: Profile Settings Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9951,
    "input_text": "QA test case for mobile banking mobile deposits",
    "target_text": "Test Case: Verify Mobile Deposits Security Controls Test ID: TC-DEP-9951 Feature: Mobile Deposits Priority: Medium Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "mobile_deposits",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3905,
    "input_text": "Test specification for card management - negative scenario",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-3905 Feature: Card Management Priority: Medium Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6000,
    "input_text": "User acceptance test for transaction alerts. Scenario type: negative",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-6000 Feature: Transaction Alerts Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4611,
    "input_text": "QA test case for mobile banking card management",
    "target_text": "Test Case: Verify Successful Card Management Test ID: TC-CARD-4611 Feature: Card Management Priority: Medium Scenario: Positive Preconditions: • User has active debit/credit card linked Test Steps: Given user accesses card management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Card settings updated successfully",
    "feature": "card_management",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6154,
    "input_text": "Test specification for transaction alerts - edge scenario",
    "target_text": "Test Case: Verify Transaction Alerts Boundary Conditions Test ID: TC-ALRT-6154 Feature: Transaction Alerts Priority: High Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "edge",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 672,
    "input_text": "User acceptance test for login authentication. Priority: Low",
    "target_text": "Test Case: Verify Login Authentication Security Controls Test ID: TC-AUTH-0672 Feature: Login Authentication Priority: Low Scenario: Security Preconditions: • Security monitoring is active And login attempts are tracked Test Steps: Given user accesses login authentication feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Account locked after failed attempts",
    "feature": "login_authentication",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 391,
    "input_text": "Generate edge test scenario for login authentication with medium priority. Mobile banking feature",
    "target_text": "Test Case: Verify Login Authentication Boundary Conditions Test ID: TC-AUTH-0391 Feature: Login Authentication Priority: Medium Scenario: Edge Preconditions: • Multiple login sessions are configured Test Steps: Given user accesses login authentication feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • System handles concurrent login attempts",
    "feature": "login_authentication",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5910,
    "input_text": "BDD scenario for transaction alerts feature",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-5910 Feature: Transaction Alerts Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2094,
    "input_text": "Create a positive test case for fund transfer. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-2094 Feature: Fund Transfer Priority: Medium Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 Expected Result: • Transfer completed with confirmation And updated balance Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5626,
    "input_text": "BDD scenario for account overview feature",
    "target_text": "Test Case: Verify Account Overview Security Controls Test ID: TC-ACCT-5626 Feature: Account Overview Priority: Low Scenario: Security Preconditions: • Account access is properly configured Test Steps: Given user accesses account overview feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Audit log created for access",
    "feature": "account_overview",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8487,
    "input_text": "Automated test case for security settings. Regression testing",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8487 Feature: Security Settings Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9023,
    "input_text": "BDD scenario for security settings feature",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-9023 Feature: Security Settings Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3275,
    "input_text": "BDD scenario for bill payment feature. Priority: Medium",
    "target_text": "Test Case: Verify Successful Bill Payment Test ID: TC-BILL-3275 Feature: Bill Payment Priority: Medium Scenario: Positive Preconditions: • User has saved billers And sufficient balance Test Steps: Given user navigates to Bill Payment When user selects 'Electricity' biller And user enters bill amount $150 And user confirms payment Expected Result: • Payment processed with receipt number generated Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "bill_payment",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9252,
    "input_text": "Test specification for security settings - positive scenario. Mobile banking feature",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-9252 Feature: Security Settings Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6789,
    "input_text": "Automated test case for beneficiary management",
    "target_text": "Test Case: Verify Beneficiary Management Boundary Conditions Test ID: TC-BNFY-6789 Feature: Beneficiary Management Priority: Medium Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "edge",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6859,
    "input_text": "Automated test case for beneficiary management",
    "target_text": "Test Case: Verify Successful Beneficiary Management Test ID: TC-BNFY-6859 Feature: Beneficiary Management Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "beneficiary_management",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8034,
    "input_text": "User acceptance test for profile settings",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-8034 Feature: Profile Settings Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9325,
    "input_text": "Automated test case for mobile deposits. Priority: Low",
    "target_text": "Test Case: Verify Mobile Deposits Fails with Invalid Input Test ID: TC-DEP-9325 Feature: Mobile Deposits Priority: Low Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "mobile_deposits",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6025,
    "input_text": "Write test case to verify transaction alerts functionality",
    "target_text": "Test Case: Verify Transaction Alerts Boundary Conditions Test ID: TC-ALRT-6025 Feature: Transaction Alerts Priority: Low Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "transaction_alerts",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8423,
    "input_text": "Generate positive test scenario for security settings with critical priority. Scenario type: positive",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8423 Feature: Security Settings Priority: Critical Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8733,
    "input_text": "Write test case to verify security settings functionality",
    "target_text": "Test Case: Verify Security Settings Fails with Invalid Input Test ID: TC-SEC-8733 Feature: Security Settings Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "security_settings",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1481,
    "input_text": "User acceptance test for fund transfer",
    "target_text": "Test Case: Verify Fund Transfer Security Controls Test ID: TC-FUND-1481 Feature: Fund Transfer Priority: Low Scenario: Security Preconditions: • Transaction monitoring is enabled Test Steps: Given user accesses fund transfer feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Transaction flagged for security review Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "fund_transfer",
    "scenario_type": "security",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 9471,
    "input_text": "BDD scenario for mobile deposits feature",
    "target_text": "Test Case: Verify Successful Mobile Deposits Test ID: TC-DEP-9471 Feature: Mobile Deposits Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses mobile deposits feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "mobile_deposits",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 1946,
    "input_text": "QA test case for mobile banking fund transfer",
    "target_text": "Test Case: Verify Successful Fund Transfer Test ID: TC-FUND-1946 Feature: Fund Transfer Priority: High Scenario: Positive Preconditions: • User is logged in with sufficient balance in account Test Steps: Given user navigates to Fund Transfer section And user has balance of $1000 in account When user selects recipient account And user enters transfer amount $100 Expected Result: • Transfer completed with confirmation And updated balance",
    "feature": "fund_transfer",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7849,
    "input_text": "BDD scenario for profile settings feature",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7849 Feature: Profile Settings Priority: High Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4694,
    "input_text": "BDD scenario for card management feature. Regression testing",
    "target_text": "Test Case: Verify Card Management Boundary Conditions Test ID: TC-CARD-4694 Feature: Card Management Priority: Low Scenario: Edge Preconditions: • Multiple cards with different limits Test Steps: Given user accesses card management feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Card limit enforcement verified",
    "feature": "card_management",
    "scenario_type": "edge",
    "priority": "Low",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5309,
    "input_text": "User acceptance test for account overview",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5309 Feature: Account Overview Priority: Medium Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 3083,
    "input_text": "Automated test case for bill payment",
    "target_text": "Test Case: Verify Bill Payment Fails with Invalid Input Test ID: TC-BILL-3083 Feature: Bill Payment Priority: Critical Scenario: Negative Preconditions: • User has no saved billers or insufficient funds Test Steps: Given user is on Bill Payment page When user enters invalid biller code Then error 'Biller not found' should appear Expected Result: • Payment rejected with appropriate error",
    "feature": "bill_payment",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 493,
    "input_text": "QA test case for mobile banking login authentication",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0493 Feature: Login Authentication Priority: Medium Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Expected Result: • Login rejected with clear error message",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Medium",
    "quality_score": 0.8500000000000001,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5760,
    "input_text": "User acceptance test for transaction alerts. Regression testing",
    "target_text": "Test Case: Verify Transaction Alerts Fails with Invalid Input Test ID: TC-ALRT-5760 Feature: Transaction Alerts Priority: Critical Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "transaction_alerts",
    "scenario_type": "negative",
    "priority": "Critical",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 8436,
    "input_text": "Create a positive test case for security settings. Priority: Medium",
    "target_text": "Test Case: Verify Successful Security Settings Test ID: TC-SEC-8436 Feature: Security Settings Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses security settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "security_settings",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 2670,
    "input_text": "Write test case to verify fund transfer functionality",
    "target_text": "Test Case: Verify Fund Transfer Boundary Conditions Test ID: TC-FUND-2670 Feature: Fund Transfer Priority: High Scenario: Edge Preconditions: • User has exactly minimum balance required Test Steps: Given user accesses fund transfer feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Transfer processes at exact limit",
    "feature": "fund_transfer",
    "scenario_type": "edge",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7348,
    "input_text": "User acceptance test for profile settings",
    "target_text": "Test Case: Verify Profile Settings Boundary Conditions Test ID: TC-PROF-7348 Feature: Profile Settings Priority: High Scenario: Edge Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs edge action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "edge",
    "priority": "High",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7156,
    "input_text": "QA test case for mobile banking beneficiary management",
    "target_text": "Test Case: Verify Beneficiary Management Security Controls Test ID: TC-BNFY-7156 Feature: Beneficiary Management Priority: Medium Scenario: Security Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs security action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Security event logged ✓ Alert sent to security team ✓ Compliance requirements met",
    "feature": "beneficiary_management",
    "scenario_type": "security",
    "priority": "Medium",
    "quality_score": 0.9249999999999999,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5805,
    "input_text": "Create a positive test case for transaction alerts",
    "target_text": "Test Case: Verify Successful Transaction Alerts Test ID: TC-ALRT-5805 Feature: Transaction Alerts Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses transaction alerts feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "transaction_alerts",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 4414,
    "input_text": "Generate negative test scenario for card management with low priority",
    "target_text": "Test Case: Verify Card Management Fails with Invalid Input Test ID: TC-CARD-4414 Feature: Card Management Priority: Low Scenario: Negative Preconditions: • Card is expired or blocked Test Steps: Given user accesses card management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Action blocked with validation error Verification Points: ✓ No data corruption occurred ✓ Error logged for monitoring ✓ User session remains valid",
    "feature": "card_management",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 6713,
    "input_text": "Automated test case for beneficiary management",
    "target_text": "Test Case: Verify Beneficiary Management Fails with Invalid Input Test ID: TC-BNFY-6713 Feature: Beneficiary Management Priority: High Scenario: Negative Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses beneficiary management feature When user performs negative action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "beneficiary_management",
    "scenario_type": "negative",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 5065,
    "input_text": "QA test case for mobile banking account overview",
    "target_text": "Test Case: Verify Successful Account Overview Test ID: TC-ACCT-5065 Feature: Account Overview Priority: High Scenario: Positive Preconditions: • User is logged in with active accounts Test Steps: Given user accesses account overview feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • All account balances displayed correctly",
    "feature": "account_overview",
    "scenario_type": "positive",
    "priority": "High",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 772,
    "input_text": "Create a negative test case for login authentication",
    "target_text": "Test Case: Verify Login Authentication Fails with Invalid Input Test ID: TC-AUTH-0772 Feature: Login Authentication Priority: Low Scenario: Negative Preconditions: • User is on login screen with network connection Test Steps: Given user is on login screen When user enters invalid username 'invalid@test.com' And user enters any password And user taps on 'Login' button Then error message 'Invalid credentials' should appear And user should remain on login screen Expected Result: • Login rejected with clear error message",
    "feature": "login_authentication",
    "scenario_type": "negative",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7625,
    "input_text": "Test specification for profile settings - positive scenario. Priority: Medium",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7625 Feature: Profile Settings Priority: Medium Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation Verification Points: ✓ Transaction logged in history ✓ Email/SMS notification sent ✓ Audit trail created",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Medium",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  },
  {
    "id": 7882,
    "input_text": "BDD scenario for profile settings feature",
    "target_text": "Test Case: Verify Successful Profile Settings Test ID: TC-PROF-7882 Feature: Profile Settings Priority: Low Scenario: Positive Preconditions: • User is logged into mobile banking application Test Steps: Given user accesses profile settings feature When user performs positive action Then system should respond appropriately And result should be logged Expected Result: • Operation completes as expected with proper validation",
    "feature": "profile_settings",
    "scenario_type": "positive",
    "priority": "Low",
    "quality_score": 1.0,
    "cleaned": true,
    "cleaning_version": "1.0"
  }
]